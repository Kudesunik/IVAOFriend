package ru.kunik.ivaofriend.gui.atc;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import ru.kunik.ivaofriend.gui.IvaoGUI;
import ru.kunik.ivaofriend.gui.util.AlphaContainer;
import ru.kunik.ivaofriend.listener.AtcListener;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.border.LineBorder;
import java.awt.Color;
import javax.swing.JLabel;
import java.awt.Font;

import javax.swing.JButton;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JToggleButton;

@SuppressWarnings("serial")
public class AtcGUI extends IvaoGUI {
	
	private JPanel contentPane;
	
	private JToggleButton toggleButtonUpdate;
	
	private JTextField fieldGlobalInformationDate;
	private JTextField fieldGlobalInformationTime;
	private JTextField fieldFlightInformationCallsign;
	private JTextField fieldFlightInformationVID;
	private JTextField fieldFlightInformationAltitudeFP;
	private JTextField fieldFlightInformationAltitideCurrent;
	private JTextField fieldFlightInformationGroundSpeedFP;
	private JTextField fieldFlightInformationSquawkATC;
	private JTextField fieldFlightInformationGroundSpeedCurrent;
	private JTextField fieldFlightInformationSquawkCurrent;
	private JTextField fieldFlightInformationFlightRule;
	private JTextField fieldFlightInformationExitScheme;
	private JTextField fieldFlightInformationRoute;
	private JTextField fieldFlightInformationDepartureAirport;
	private JTextField fieldFlightInformationAlternativeAirport1;
	private JTextField fieldFlightInformationDestinationAirport;
	private JTextField fieldFlightInformationAlternativeAirport2;
	private JTextField fieldFlightInformationDepartureTimeFP;
	private JTextField fieldFlightInformationEET;
	private JTextField fieldFlightInformationDepartureTimeCurrent;
	private JTextField fieldFlightInformationFOB;
	private JTextField fieldFlightInformationAircraftType;
	private JTextField fieldFlightInformationFlightType;
	private JTextField fieldFlightInformationRemarks;
	private JTextField fieldAirportInformationICAO;
	private JTextField fieldAirportInformationTransitionLevel;
	private JTextField fieldAirportInformationDELFrequency;
	private JTextField fieldAirportInformationActiveRWY1;
	private JTextField fieldAirportInformationTransitionAltitude;
	private JTextField fieldAirportInformationGNDFrequency;
	private JTextField fieldAirportInformationActiveRWY2;
	private JTextField fieldAirportInformationTWRFrequency;
	private JTextField fieldAirportInformationAPPFrequency;
	private JTextField fieldAirportInformationActiveRWY3;
	private JTextField fieldAirportInformationMETAR;
	private JTextField fieldAirportInformationSquawkStart;
	private JTextField fieldAirportInformationSquawkEnd;
	private JTextField fieldAirportInformationSquawkFree;
	
	private final Map<String, JTextField> informationFields;
	
	private final List<String> fieldsWithListeners;
	
	public AtcGUI(AtcListener listener) {
		
		super("IVAO Friend (ATC window)");
		
		setResizable(false);
		
		setIconImage(programImage);
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1280, 800);
		
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		
		setContentPane(contentPane);
		
		this.informationFields = new HashMap<>();
		this.fieldsWithListeners = new ArrayList<>();
		
		GridBagLayout gbl_contentPane = new GridBagLayout();
		gbl_contentPane.columnWidths = new int[]{0, 0, 0, 0};
		gbl_contentPane.rowHeights = new int[]{0, 0, 0};
		gbl_contentPane.columnWeights = new double[]{1.0, 1.0, 1.0, Double.MIN_VALUE};
		gbl_contentPane.rowWeights = new double[]{1.0, 1.0, Double.MIN_VALUE};
		contentPane.setLayout(gbl_contentPane);
		
		JPanel panelPlanes = new JPanel();
		panelPlanes.setBorder(new LineBorder(ivaoColor, 2));
		GridBagConstraints gbc_panelPlanes = new GridBagConstraints();
		gbc_panelPlanes.weightx = 1.0;
		gbc_panelPlanes.gridheight = 2;
		gbc_panelPlanes.insets = new Insets(4, 4, 4, 4);
		gbc_panelPlanes.fill = GridBagConstraints.BOTH;
		gbc_panelPlanes.gridx = 0;
		gbc_panelPlanes.gridy = 0;
		contentPane.add(panelPlanes, gbc_panelPlanes);
		GridBagLayout gbl_panelPlanes = new GridBagLayout();
		gbl_panelPlanes.columnWidths = new int[]{0, 0};
		gbl_panelPlanes.rowHeights = new int[]{0, 0, 0, 0, 0, 0};
		gbl_panelPlanes.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelPlanes.rowWeights = new double[]{0.0, 0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
		panelPlanes.setLayout(gbl_panelPlanes);
		
		JPanel panelPlanesTitle = new JPanel();
		GridBagConstraints gbc_panelPlanesTitle = new GridBagConstraints();
		gbc_panelPlanesTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelPlanesTitle.fill = GridBagConstraints.BOTH;
		gbc_panelPlanesTitle.gridx = 0;
		gbc_panelPlanesTitle.gridy = 0;
		panelPlanes.add(panelPlanesTitle, gbc_panelPlanesTitle);
		GridBagLayout gbl_panelPlanesTitle = new GridBagLayout();
		gbl_panelPlanesTitle.columnWidths = new int[]{0, 0};
		gbl_panelPlanesTitle.rowHeights = new int[]{0, 0};
		gbl_panelPlanesTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelPlanesTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelPlanesTitle.setLayout(gbl_panelPlanesTitle);
		
		JLabel labelPlanesTitle = new JLabel("Planes");
		labelPlanesTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		GridBagConstraints gbc_labelPlanesTitle = new GridBagConstraints();
		gbc_labelPlanesTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelPlanesTitle.gridx = 0;
		gbc_labelPlanesTitle.gridy = 0;
		panelPlanesTitle.add(labelPlanesTitle, gbc_labelPlanesTitle);
		
		JSeparator separatorPlanes1 = new JSeparator();
		GridBagConstraints gbc_separatorPlanes1 = new GridBagConstraints();
		gbc_separatorPlanes1.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorPlanes1.insets = new Insets(2, 2, 2, 2);
		gbc_separatorPlanes1.gridx = 0;
		gbc_separatorPlanes1.gridy = 1;
		panelPlanes.add(separatorPlanes1, gbc_separatorPlanes1);
		
		JPanel panelPlanesList = new JPanel();
		GridBagConstraints gbc_panelPlanesList = new GridBagConstraints();
		gbc_panelPlanesList.insets = new Insets(2, 2, 2, 2);
		gbc_panelPlanesList.fill = GridBagConstraints.BOTH;
		gbc_panelPlanesList.gridx = 0;
		gbc_panelPlanesList.gridy = 2;
		panelPlanes.add(panelPlanesList, gbc_panelPlanesList);
		GridBagLayout gbl_panelPlanesList = new GridBagLayout();
		gbl_panelPlanesList.columnWidths = new int[]{0};
		gbl_panelPlanesList.rowHeights = new int[]{0};
		gbl_panelPlanesList.columnWeights = new double[]{Double.MIN_VALUE};
		gbl_panelPlanesList.rowWeights = new double[]{Double.MIN_VALUE};
		panelPlanesList.setLayout(gbl_panelPlanesList);
		
		JSeparator separatorPlanes2 = new JSeparator();
		GridBagConstraints gbc_separatorPlanes2 = new GridBagConstraints();
		gbc_separatorPlanes2.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorPlanes2.insets = new Insets(2, 2, 2, 2);
		gbc_separatorPlanes2.gridx = 0;
		gbc_separatorPlanes2.gridy = 3;
		panelPlanes.add(separatorPlanes2, gbc_separatorPlanes2);
		
		JPanel panelPlanesButtons = new JPanel();
		GridBagConstraints gbc_panelPlanesButtons = new GridBagConstraints();
		gbc_panelPlanesButtons.insets = new Insets(2, 2, 2, 2);
		gbc_panelPlanesButtons.fill = GridBagConstraints.BOTH;
		gbc_panelPlanesButtons.gridx = 0;
		gbc_panelPlanesButtons.gridy = 4;
		panelPlanes.add(panelPlanesButtons, gbc_panelPlanesButtons);
		GridBagLayout gbl_panelPlanesButtons = new GridBagLayout();
		gbl_panelPlanesButtons.columnWidths = new int[]{0, 0};
		gbl_panelPlanesButtons.rowHeights = new int[]{0, 0, 0};
		gbl_panelPlanesButtons.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelPlanesButtons.rowWeights = new double[]{0.0, 0.0, Double.MIN_VALUE};
		panelPlanesButtons.setLayout(gbl_panelPlanesButtons);
		
		toggleButtonUpdate = new JToggleButton("Enable ATC");
		GridBagConstraints gbc_toggleButtonUpdate = new GridBagConstraints();
		gbc_toggleButtonUpdate.fill = GridBagConstraints.HORIZONTAL;
		gbc_toggleButtonUpdate.insets = new Insets(2, 2, 2, 2);
		gbc_toggleButtonUpdate.gridx = 0;
		gbc_toggleButtonUpdate.gridy = 0;
		panelPlanesButtons.add(toggleButtonUpdate, gbc_toggleButtonUpdate);
		
		JButton buttonUpdate = new JButton("Update (60)");
		buttonUpdate.setEnabled(false);
		GridBagConstraints gbc_buttonUpdate = new GridBagConstraints();
		gbc_buttonUpdate.insets = new Insets(2, 2, 2, 2);
		gbc_buttonUpdate.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonUpdate.gridx = 0;
		gbc_buttonUpdate.gridy = 1;
		panelPlanesButtons.add(buttonUpdate, gbc_buttonUpdate);
		
		JPanel panelControl = new JPanel();
		panelControl.setBorder(new LineBorder(ivaoColor, 2));
		GridBagConstraints gbc_panelControl = new GridBagConstraints();
		gbc_panelControl.weightx = 5.0;
		gbc_panelControl.gridheight = 2;
		gbc_panelControl.insets = new Insets(4, 4, 4, 4);
		gbc_panelControl.fill = GridBagConstraints.BOTH;
		gbc_panelControl.gridx = 1;
		gbc_panelControl.gridy = 0;
		contentPane.add(panelControl, gbc_panelControl);
		GridBagLayout gbl_panelControl = new GridBagLayout();
		gbl_panelControl.columnWidths = new int[]{0, 0};
		gbl_panelControl.rowHeights = new int[]{0, 0, 0, 0, 0};
		gbl_panelControl.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelControl.rowWeights = new double[]{0.0, 0.0, 0.0, 1.0, Double.MIN_VALUE};
		panelControl.setLayout(gbl_panelControl);
		
		JPanel panelVoiceMessageNative = new JPanel();
		GridBagConstraints gbc_panelVoiceMessageNative = new GridBagConstraints();
		gbc_panelVoiceMessageNative.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageNative.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageNative.gridx = 0;
		gbc_panelVoiceMessageNative.gridy = 0;
		panelControl.add(panelVoiceMessageNative, gbc_panelVoiceMessageNative);
		GridBagLayout gbl_panelVoiceMessageNative = new GridBagLayout();
		gbl_panelVoiceMessageNative.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageNative.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelVoiceMessageNative.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageNative.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelVoiceMessageNative.setLayout(gbl_panelVoiceMessageNative);
		
		JPanel panelVoiceMessageNativeTitle = new JPanel();
		GridBagConstraints gbc_panelVoiceMessageNativeTitle = new GridBagConstraints();
		gbc_panelVoiceMessageNativeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageNativeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageNativeTitle.gridx = 0;
		gbc_panelVoiceMessageNativeTitle.gridy = 0;
		panelVoiceMessageNative.add(panelVoiceMessageNativeTitle, gbc_panelVoiceMessageNativeTitle);
		GridBagLayout gbl_panelVoiceMessageNativeTitle = new GridBagLayout();
		gbl_panelVoiceMessageNativeTitle.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageNativeTitle.rowHeights = new int[]{0, 0};
		gbl_panelVoiceMessageNativeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageNativeTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelVoiceMessageNativeTitle.setLayout(gbl_panelVoiceMessageNativeTitle);
		
		JLabel labelVoiceMessageNativeTitle = new JLabel("Voice message (native language)");
		labelVoiceMessageNativeTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelVoiceMessageNativeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelVoiceMessageNativeTitle = new GridBagConstraints();
		gbc_labelVoiceMessageNativeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelVoiceMessageNativeTitle.fill = GridBagConstraints.BOTH;
		gbc_labelVoiceMessageNativeTitle.gridx = 0;
		gbc_labelVoiceMessageNativeTitle.gridy = 0;
		panelVoiceMessageNativeTitle.add(labelVoiceMessageNativeTitle, gbc_labelVoiceMessageNativeTitle);
		
		JSeparator separatorControl1 = new JSeparator();
		GridBagConstraints gbc_separatorControl1 = new GridBagConstraints();
		gbc_separatorControl1.insets = new Insets(2, 2, 2, 2);
		gbc_separatorControl1.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorControl1.gridx = 0;
		gbc_separatorControl1.gridy = 1;
		panelVoiceMessageNative.add(separatorControl1, gbc_separatorControl1);
		
		JPanel panelVoiceMessageNativeText = new JPanel();
		panelVoiceMessageNativeText.setBorder(new LineBorder(borderMessageColor));
		GridBagConstraints gbc_panelVoiceMessageNativeText = new GridBagConstraints();
		gbc_panelVoiceMessageNativeText.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageNativeText.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageNativeText.gridx = 0;
		gbc_panelVoiceMessageNativeText.gridy = 2;
		panelVoiceMessageNative.add(panelVoiceMessageNativeText, gbc_panelVoiceMessageNativeText);
		GridBagLayout gbl_panelVoiceMessageNativeText = new GridBagLayout();
		gbl_panelVoiceMessageNativeText.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageNativeText.rowHeights = new int[]{0, 0};
		gbl_panelVoiceMessageNativeText.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageNativeText.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelVoiceMessageNativeText.setLayout(gbl_panelVoiceMessageNativeText);
		
		JTextArea textAreaVoiceMessageNative = new JTextArea();
		textAreaVoiceMessageNative.setBackground(new Color(240, 240, 240));
		textAreaVoiceMessageNative.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		textAreaVoiceMessageNative.setRows(4);
		textAreaVoiceMessageNative.setEditable(false);
		GridBagConstraints gbc_textAreaVoiceMessageNative = new GridBagConstraints();
		gbc_textAreaVoiceMessageNative.insets = new Insets(2, 2, 2, 2);
		gbc_textAreaVoiceMessageNative.fill = GridBagConstraints.BOTH;
		gbc_textAreaVoiceMessageNative.gridx = 0;
		gbc_textAreaVoiceMessageNative.gridy = 0;
		panelVoiceMessageNativeText.add(textAreaVoiceMessageNative, gbc_textAreaVoiceMessageNative);
		
		JPanel panelVoiceMessageEnglish = new JPanel();
		GridBagConstraints gbc_panelVoiceMessageEnglish = new GridBagConstraints();
		gbc_panelVoiceMessageEnglish.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageEnglish.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageEnglish.gridx = 0;
		gbc_panelVoiceMessageEnglish.gridy = 1;
		panelControl.add(panelVoiceMessageEnglish, gbc_panelVoiceMessageEnglish);
		GridBagLayout gbl_panelVoiceMessageEnglish = new GridBagLayout();
		gbl_panelVoiceMessageEnglish.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageEnglish.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelVoiceMessageEnglish.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageEnglish.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelVoiceMessageEnglish.setLayout(gbl_panelVoiceMessageEnglish);
		
		JPanel panelVoiceMessageEnglishTitle = new JPanel();
		GridBagConstraints gbc_panelVoiceMessageEnglishTitle = new GridBagConstraints();
		gbc_panelVoiceMessageEnglishTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageEnglishTitle.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageEnglishTitle.gridx = 0;
		gbc_panelVoiceMessageEnglishTitle.gridy = 0;
		panelVoiceMessageEnglish.add(panelVoiceMessageEnglishTitle, gbc_panelVoiceMessageEnglishTitle);
		GridBagLayout gbl_panelVoiceMessageEnglishTitle = new GridBagLayout();
		gbl_panelVoiceMessageEnglishTitle.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageEnglishTitle.rowHeights = new int[]{0, 0};
		gbl_panelVoiceMessageEnglishTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageEnglishTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelVoiceMessageEnglishTitle.setLayout(gbl_panelVoiceMessageEnglishTitle);
		
		JLabel labelVoiceMessageEnglishTitle = new JLabel("Voice message (english language)");
		labelVoiceMessageEnglishTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelVoiceMessageEnglishTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelVoiceMessageEnglishTitle = new GridBagConstraints();
		gbc_labelVoiceMessageEnglishTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelVoiceMessageEnglishTitle.fill = GridBagConstraints.HORIZONTAL;
		gbc_labelVoiceMessageEnglishTitle.gridx = 0;
		gbc_labelVoiceMessageEnglishTitle.gridy = 0;
		panelVoiceMessageEnglishTitle.add(labelVoiceMessageEnglishTitle, gbc_labelVoiceMessageEnglishTitle);
		
		JSeparator separatorControl2 = new JSeparator();
		GridBagConstraints gbc_separatorControl2 = new GridBagConstraints();
		gbc_separatorControl2.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorControl2.insets = new Insets(2, 2, 2, 2);
		gbc_separatorControl2.gridx = 0;
		gbc_separatorControl2.gridy = 1;
		panelVoiceMessageEnglish.add(separatorControl2, gbc_separatorControl2);
		
		JPanel panelVoiceMessageEnglishText = new JPanel();
		panelVoiceMessageEnglishText.setBorder(new LineBorder(borderMessageColor));
		GridBagConstraints gbc_panelVoiceMessageEnglishText = new GridBagConstraints();
		gbc_panelVoiceMessageEnglishText.insets = new Insets(2, 2, 2, 2);
		gbc_panelVoiceMessageEnglishText.fill = GridBagConstraints.BOTH;
		gbc_panelVoiceMessageEnglishText.gridx = 0;
		gbc_panelVoiceMessageEnglishText.gridy = 2;
		panelVoiceMessageEnglish.add(panelVoiceMessageEnglishText, gbc_panelVoiceMessageEnglishText);
		GridBagLayout gbl_panelVoiceMessageEnglishText = new GridBagLayout();
		gbl_panelVoiceMessageEnglishText.columnWidths = new int[]{0, 0};
		gbl_panelVoiceMessageEnglishText.rowHeights = new int[]{0, 0};
		gbl_panelVoiceMessageEnglishText.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVoiceMessageEnglishText.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelVoiceMessageEnglishText.setLayout(gbl_panelVoiceMessageEnglishText);
		
		JTextArea textAreaVoiceMessageEnglish = new JTextArea();
		textAreaVoiceMessageEnglish.setBackground(backgroundMessageColor);
		textAreaVoiceMessageEnglish.setRows(4);
		textAreaVoiceMessageEnglish.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		textAreaVoiceMessageEnglish.setEditable(false);
		GridBagConstraints gbc_textAreaVoiceMessageEnglish = new GridBagConstraints();
		gbc_textAreaVoiceMessageEnglish.insets = new Insets(2, 2, 2, 2);
		gbc_textAreaVoiceMessageEnglish.fill = GridBagConstraints.BOTH;
		gbc_textAreaVoiceMessageEnglish.gridx = 0;
		gbc_textAreaVoiceMessageEnglish.gridy = 0;
		panelVoiceMessageEnglishText.add(textAreaVoiceMessageEnglish, gbc_textAreaVoiceMessageEnglish);
		
		JPanel panelTextMessage = new JPanel();
		GridBagConstraints gbc_panelTextMessage = new GridBagConstraints();
		gbc_panelTextMessage.insets = new Insets(2, 2, 2, 2);
		gbc_panelTextMessage.fill = GridBagConstraints.BOTH;
		gbc_panelTextMessage.gridx = 0;
		gbc_panelTextMessage.gridy = 2;
		panelControl.add(panelTextMessage, gbc_panelTextMessage);
		GridBagLayout gbl_panelTextMessage = new GridBagLayout();
		gbl_panelTextMessage.columnWidths = new int[]{0, 0};
		gbl_panelTextMessage.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelTextMessage.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelTextMessage.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelTextMessage.setLayout(gbl_panelTextMessage);
		
		JPanel panelTextMessageTitle = new JPanel();
		GridBagConstraints gbc_panelTextMessageTitle = new GridBagConstraints();
		gbc_panelTextMessageTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelTextMessageTitle.fill = GridBagConstraints.BOTH;
		gbc_panelTextMessageTitle.gridx = 0;
		gbc_panelTextMessageTitle.gridy = 0;
		panelTextMessage.add(panelTextMessageTitle, gbc_panelTextMessageTitle);
		GridBagLayout gbl_panelTextMessageTitle = new GridBagLayout();
		gbl_panelTextMessageTitle.columnWidths = new int[]{0, 0};
		gbl_panelTextMessageTitle.rowHeights = new int[]{0, 0};
		gbl_panelTextMessageTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelTextMessageTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelTextMessageTitle.setLayout(gbl_panelTextMessageTitle);
		
		JLabel labelTextMessageTitle = new JLabel("Text message");
		labelTextMessageTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		GridBagConstraints gbc_labelTextMessageTitle = new GridBagConstraints();
		gbc_labelTextMessageTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelTextMessageTitle.gridx = 0;
		gbc_labelTextMessageTitle.gridy = 0;
		panelTextMessageTitle.add(labelTextMessageTitle, gbc_labelTextMessageTitle);
		
		JSeparator separatorControl3 = new JSeparator();
		GridBagConstraints gbc_separatorControl3 = new GridBagConstraints();
		gbc_separatorControl3.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorControl3.insets = new Insets(2, 2, 2, 2);
		gbc_separatorControl3.gridx = 0;
		gbc_separatorControl3.gridy = 1;
		panelTextMessage.add(separatorControl3, gbc_separatorControl3);
		
		JPanel panelTextMessageText = new JPanel();
		panelTextMessageText.setBorder(new LineBorder(borderMessageColor));
		GridBagConstraints gbc_panelTextMessageText = new GridBagConstraints();
		gbc_panelTextMessageText.insets = new Insets(2, 2, 2, 2);
		gbc_panelTextMessageText.fill = GridBagConstraints.BOTH;
		gbc_panelTextMessageText.gridx = 0;
		gbc_panelTextMessageText.gridy = 2;
		panelTextMessage.add(panelTextMessageText, gbc_panelTextMessageText);
		GridBagLayout gbl_panelTextMessageText = new GridBagLayout();
		gbl_panelTextMessageText.columnWidths = new int[]{0, 0};
		gbl_panelTextMessageText.rowHeights = new int[]{0, 0};
		gbl_panelTextMessageText.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelTextMessageText.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelTextMessageText.setLayout(gbl_panelTextMessageText);
		
		JTextArea textAreaTextMessage = new JTextArea();
		textAreaTextMessage.setBackground(backgroundMessageColor);
		textAreaTextMessage.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		textAreaTextMessage.setRows(1);
		GridBagConstraints gbc_textAreaTextMessage = new GridBagConstraints();
		gbc_textAreaTextMessage.insets = new Insets(2, 2, 2, 2);
		gbc_textAreaTextMessage.fill = GridBagConstraints.BOTH;
		gbc_textAreaTextMessage.gridx = 0;
		gbc_textAreaTextMessage.gridy = 0;
		panelTextMessageText.add(textAreaTextMessage, gbc_textAreaTextMessage);
		
		JPanel panelVisualInformation = new JPanel();
		GridBagConstraints gbc_panelVisualInformation = new GridBagConstraints();
		gbc_panelVisualInformation.insets = new Insets(2, 2, 2, 2);
		gbc_panelVisualInformation.fill = GridBagConstraints.BOTH;
		gbc_panelVisualInformation.gridx = 0;
		gbc_panelVisualInformation.gridy = 3;
		panelControl.add(panelVisualInformation, gbc_panelVisualInformation);
		GridBagLayout gbl_panelVisualInformation = new GridBagLayout();
		gbl_panelVisualInformation.columnWidths = new int[]{0, 0};
		gbl_panelVisualInformation.rowHeights = new int[]{0, 0, 0, 0, 0, 0};
		gbl_panelVisualInformation.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVisualInformation.rowWeights = new double[]{0.0, 0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
		panelVisualInformation.setLayout(gbl_panelVisualInformation);
		
		JPanel panelVisualInformationTitle = new JPanel();
		GridBagConstraints gbc_panelVisualInformationTitle = new GridBagConstraints();
		gbc_panelVisualInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelVisualInformationTitle.fill = GridBagConstraints.BOTH;
		gbc_panelVisualInformationTitle.gridx = 0;
		gbc_panelVisualInformationTitle.gridy = 0;
		panelVisualInformation.add(panelVisualInformationTitle, gbc_panelVisualInformationTitle);
		GridBagLayout gbl_panelVisualInformationTitle = new GridBagLayout();
		gbl_panelVisualInformationTitle.columnWidths = new int[]{0, 0};
		gbl_panelVisualInformationTitle.rowHeights = new int[]{0, 0};
		gbl_panelVisualInformationTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelVisualInformationTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelVisualInformationTitle.setLayout(gbl_panelVisualInformationTitle);
		
		JLabel labelVisualInformationTitle = new JLabel("Visual information");
		labelVisualInformationTitle.setHorizontalAlignment(SwingConstants.CENTER);
		labelVisualInformationTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		GridBagConstraints gbc_labelVisualInformationTitle = new GridBagConstraints();
		gbc_labelVisualInformationTitle.fill = GridBagConstraints.HORIZONTAL;
		gbc_labelVisualInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelVisualInformationTitle.gridx = 0;
		gbc_labelVisualInformationTitle.gridy = 0;
		panelVisualInformationTitle.add(labelVisualInformationTitle, gbc_labelVisualInformationTitle);
		
		JSeparator separatorControl4 = new JSeparator();
		GridBagConstraints gbc_separatorControl4 = new GridBagConstraints();
		gbc_separatorControl4.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorControl4.insets = new Insets(2, 2, 2, 2);
		gbc_separatorControl4.gridx = 0;
		gbc_separatorControl4.gridy = 1;
		panelVisualInformation.add(separatorControl4, gbc_separatorControl4);
		
		JPanel panelVisualInformationVisual = new JPanel();
		panelVisualInformationVisual.setBorder(new LineBorder(borderMessageColor));
		GridBagConstraints gbc_panelVisualInformationVisual = new GridBagConstraints();
		gbc_panelVisualInformationVisual.insets = new Insets(2, 2, 2, 2);
		gbc_panelVisualInformationVisual.fill = GridBagConstraints.BOTH;
		gbc_panelVisualInformationVisual.gridx = 0;
		gbc_panelVisualInformationVisual.gridy = 2;
		panelVisualInformation.add(panelVisualInformationVisual, gbc_panelVisualInformationVisual);
		GridBagLayout gbl_panelVisualInformationVisual = new GridBagLayout();
		gbl_panelVisualInformationVisual.columnWidths = new int[]{0};
		gbl_panelVisualInformationVisual.rowHeights = new int[]{0};
		gbl_panelVisualInformationVisual.columnWeights = new double[]{Double.MIN_VALUE};
		gbl_panelVisualInformationVisual.rowWeights = new double[]{Double.MIN_VALUE};
		panelVisualInformationVisual.setLayout(gbl_panelVisualInformationVisual);
		
		JSeparator separatorControl5 = new JSeparator();
		GridBagConstraints gbc_separatorControl5 = new GridBagConstraints();
		gbc_separatorControl5.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorControl5.insets = new Insets(2, 2, 2, 2);
		gbc_separatorControl5.gridx = 0;
		gbc_separatorControl5.gridy = 3;
		panelVisualInformation.add(separatorControl5, gbc_separatorControl5);
		
		JPanel panelFlightControl = new JPanel();
		GridBagConstraints gbc_panelFlightControl = new GridBagConstraints();
		gbc_panelFlightControl.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightControl.fill = GridBagConstraints.BOTH;
		gbc_panelFlightControl.gridx = 0;
		gbc_panelFlightControl.gridy = 4;
		panelVisualInformation.add(panelFlightControl, gbc_panelFlightControl);
		GridBagLayout gbl_panelFlightControl = new GridBagLayout();
		gbl_panelFlightControl.columnWidths = new int[]{0, 0};
		gbl_panelFlightControl.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelFlightControl.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightControl.rowWeights = new double[]{1.0, 0.0, 0.0, Double.MIN_VALUE};
		panelFlightControl.setLayout(gbl_panelFlightControl);
		
		JPanel panelFlightControlTitle = new JPanel();
		GridBagConstraints gbc_panelFlightControlTitle = new GridBagConstraints();
		gbc_panelFlightControlTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightControlTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightControlTitle.gridx = 0;
		gbc_panelFlightControlTitle.gridy = 0;
		panelFlightControl.add(panelFlightControlTitle, gbc_panelFlightControlTitle);
		GridBagLayout gbl_panelFlightControlTitle = new GridBagLayout();
		gbl_panelFlightControlTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightControlTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightControlTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightControlTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelFlightControlTitle.setLayout(gbl_panelFlightControlTitle);
		
		JLabel labelFlightControlTitle = new JLabel("Flight control");
		labelFlightControlTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelFlightControlTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightControlTitle = new GridBagConstraints();
		gbc_labelFlightControlTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightControlTitle.gridx = 0;
		gbc_labelFlightControlTitle.gridy = 0;
		panelFlightControlTitle.add(labelFlightControlTitle, gbc_labelFlightControlTitle);
		
		JPanel panelFlightControlButtons1 = new JPanel();
		GridBagConstraints gbc_panelFlightControlButtons1 = new GridBagConstraints();
		gbc_panelFlightControlButtons1.insets = new Insets(2, 2, 5, 2);
		gbc_panelFlightControlButtons1.fill = GridBagConstraints.BOTH;
		gbc_panelFlightControlButtons1.gridx = 0;
		gbc_panelFlightControlButtons1.gridy = 1;
		panelFlightControl.add(panelFlightControlButtons1, gbc_panelFlightControlButtons1);
		GridBagLayout gbl_panelFlightControlButtons1 = new GridBagLayout();
		gbl_panelFlightControlButtons1.columnWidths = new int[]{0, 0, 0, 0, 0};
		gbl_panelFlightControlButtons1.rowHeights = new int[]{0, 0};
		gbl_panelFlightControlButtons1.columnWeights = new double[]{1.0, 1.0, 1.0, 1.0, Double.MIN_VALUE};
		gbl_panelFlightControlButtons1.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelFlightControlButtons1.setLayout(gbl_panelFlightControlButtons1);
		
		JButton buttonFlightControlDEL = new JButton("DEL");
		GridBagConstraints gbc_buttonFlightControlDEL = new GridBagConstraints();
		gbc_buttonFlightControlDEL.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlDEL.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlDEL.gridx = 0;
		gbc_buttonFlightControlDEL.gridy = 0;
		panelFlightControlButtons1.add(buttonFlightControlDEL, gbc_buttonFlightControlDEL);
		
		JButton buttonFlightControlGND = new JButton("GND");
		GridBagConstraints gbc_buttonFlightControlGND = new GridBagConstraints();
		gbc_buttonFlightControlGND.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlGND.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlGND.gridx = 1;
		gbc_buttonFlightControlGND.gridy = 0;
		panelFlightControlButtons1.add(buttonFlightControlGND, gbc_buttonFlightControlGND);
		
		JButton buttonFlightControlTWR = new JButton("TWR");
		GridBagConstraints gbc_buttonFlightControlTWR = new GridBagConstraints();
		gbc_buttonFlightControlTWR.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlTWR.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlTWR.gridx = 2;
		gbc_buttonFlightControlTWR.gridy = 0;
		panelFlightControlButtons1.add(buttonFlightControlTWR, gbc_buttonFlightControlTWR);
		
		JButton buttonFlightControlAPP = new JButton("APP");
		GridBagConstraints gbc_buttonFlightControlAPP = new GridBagConstraints();
		gbc_buttonFlightControlAPP.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlAPP.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlAPP.gridx = 3;
		gbc_buttonFlightControlAPP.gridy = 0;
		panelFlightControlButtons1.add(buttonFlightControlAPP, gbc_buttonFlightControlAPP);
		
		JPanel panelFlightControlButtons2 = new JPanel();
		GridBagConstraints gbc_panelFlightControlButtons2 = new GridBagConstraints();
		gbc_panelFlightControlButtons2.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightControlButtons2.fill = GridBagConstraints.BOTH;
		gbc_panelFlightControlButtons2.gridx = 0;
		gbc_panelFlightControlButtons2.gridy = 2;
		panelFlightControl.add(panelFlightControlButtons2, gbc_panelFlightControlButtons2);
		GridBagLayout gbl_panelFlightControlButtons2 = new GridBagLayout();
		gbl_panelFlightControlButtons2.columnWidths = new int[]{0, 0, 0};
		gbl_panelFlightControlButtons2.rowHeights = new int[]{0, 0};
		gbl_panelFlightControlButtons2.columnWeights = new double[]{1.0, 1.0, Double.MIN_VALUE};
		gbl_panelFlightControlButtons2.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelFlightControlButtons2.setLayout(gbl_panelFlightControlButtons2);
		
		JButton buttonFlightControlPrevious = new JButton("Previous");
		GridBagConstraints gbc_buttonFlightControlPrevious = new GridBagConstraints();
		gbc_buttonFlightControlPrevious.weighty = 1.0;
		gbc_buttonFlightControlPrevious.weightx = 1.0;
		gbc_buttonFlightControlPrevious.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlPrevious.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlPrevious.gridx = 0;
		gbc_buttonFlightControlPrevious.gridy = 0;
		panelFlightControlButtons2.add(buttonFlightControlPrevious, gbc_buttonFlightControlPrevious);
		
		JButton buttonFlightControlNext = new JButton("Next");
		GridBagConstraints gbc_buttonFlightControlNext = new GridBagConstraints();
		gbc_buttonFlightControlNext.weighty = 1.0;
		gbc_buttonFlightControlNext.weightx = 1.0;
		gbc_buttonFlightControlNext.insets = new Insets(2, 2, 2, 2);
		gbc_buttonFlightControlNext.fill = GridBagConstraints.HORIZONTAL;
		gbc_buttonFlightControlNext.gridx = 1;
		gbc_buttonFlightControlNext.gridy = 0;
		panelFlightControlButtons2.add(buttonFlightControlNext, gbc_buttonFlightControlNext);
		
		JPanel panelInformation = new JPanel();
		panelInformation.setBorder(new LineBorder(ivaoColor, 2));
		GridBagConstraints gbc_panelInformation = new GridBagConstraints();
		gbc_panelInformation.weightx = 10.0;
		gbc_panelInformation.gridheight = 2;
		gbc_panelInformation.insets = new Insets(4, 4, 4, 4);
		gbc_panelInformation.fill = GridBagConstraints.BOTH;
		gbc_panelInformation.gridx = 2;
		gbc_panelInformation.gridy = 0;
		contentPane.add(panelInformation, gbc_panelInformation);
		GridBagLayout gbl_panelInformation = new GridBagLayout();
		gbl_panelInformation.columnWidths = new int[]{0, 0};
		gbl_panelInformation.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelInformation.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelInformation.rowWeights = new double[]{0.0, 1.0, 1.0, Double.MIN_VALUE};
		panelInformation.setLayout(gbl_panelInformation);
		
		JPanel panelGlobalInformation = new JPanel();
		GridBagConstraints gbc_panelGlobalInformation = new GridBagConstraints();
		gbc_panelGlobalInformation.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformation.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformation.gridx = 0;
		gbc_panelGlobalInformation.gridy = 0;
		panelInformation.add(panelGlobalInformation, gbc_panelGlobalInformation);
		GridBagLayout gbl_panelGlobalInformation = new GridBagLayout();
		gbl_panelGlobalInformation.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformation.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelGlobalInformation.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformation.rowWeights = new double[]{0.0, 0.0, 1.0, Double.MIN_VALUE};
		panelGlobalInformation.setLayout(gbl_panelGlobalInformation);
		
		JPanel panelGlobalInformationTitle = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationTitle = new GridBagConstraints();
		gbc_panelGlobalInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationTitle.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationTitle.gridx = 0;
		gbc_panelGlobalInformationTitle.gridy = 0;
		panelGlobalInformation.add(panelGlobalInformationTitle, gbc_panelGlobalInformationTitle);
		GridBagLayout gbl_panelGlobalInformationTitle = new GridBagLayout();
		gbl_panelGlobalInformationTitle.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformationTitle.rowHeights = new int[]{0, 0};
		gbl_panelGlobalInformationTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformationTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelGlobalInformationTitle.setLayout(gbl_panelGlobalInformationTitle);
		
		JLabel labelGlobalInformationTitle = new JLabel("Global information");
		labelGlobalInformationTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelGlobalInformationTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelGlobalInformationTitle = new GridBagConstraints();
		gbc_labelGlobalInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelGlobalInformationTitle.fill = GridBagConstraints.HORIZONTAL;
		gbc_labelGlobalInformationTitle.gridx = 0;
		gbc_labelGlobalInformationTitle.gridy = 0;
		panelGlobalInformationTitle.add(labelGlobalInformationTitle, gbc_labelGlobalInformationTitle);
		
		JSeparator separatorInformation1 = new JSeparator();
		GridBagConstraints gbc_separatorInformation1 = new GridBagConstraints();
		gbc_separatorInformation1.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorInformation1.insets = new Insets(2, 2, 2, 2);
		gbc_separatorInformation1.gridx = 0;
		gbc_separatorInformation1.gridy = 1;
		panelGlobalInformation.add(separatorInformation1, gbc_separatorInformation1);
		
		JPanel panelGlobalInformationData = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationData = new GridBagConstraints();
		gbc_panelGlobalInformationData.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationData.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationData.gridx = 0;
		gbc_panelGlobalInformationData.gridy = 2;
		panelGlobalInformation.add(panelGlobalInformationData, gbc_panelGlobalInformationData);
		GridBagLayout gbl_panelGlobalInformationData = new GridBagLayout();
		gbl_panelGlobalInformationData.columnWidths = new int[]{0};
		gbl_panelGlobalInformationData.rowHeights = new int[]{0};
		gbl_panelGlobalInformationData.columnWeights = new double[]{0.0, 1.0, 0.0, 1.0};
		gbl_panelGlobalInformationData.rowWeights = new double[]{1.0};
		panelGlobalInformationData.setLayout(gbl_panelGlobalInformationData);
		
		JPanel panelGlobalInformationDateTitle = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationDateTitle = new GridBagConstraints();
		gbc_panelGlobalInformationDateTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationDateTitle.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationDateTitle.gridx = 0;
		gbc_panelGlobalInformationDateTitle.gridy = 0;
		panelGlobalInformationData.add(panelGlobalInformationDateTitle, gbc_panelGlobalInformationDateTitle);
		GridBagLayout gbl_panelGlobalInformationDateTitle = new GridBagLayout();
		gbl_panelGlobalInformationDateTitle.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformationDateTitle.rowHeights = new int[]{0, 0};
		gbl_panelGlobalInformationDateTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformationDateTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelGlobalInformationDateTitle.setLayout(gbl_panelGlobalInformationDateTitle);
		
		JLabel labelGlobalInformationDateTitle = new JLabel("Date:");
		labelGlobalInformationDateTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelGlobalInformationDateTitle = new GridBagConstraints();
		gbc_labelGlobalInformationDateTitle.anchor = GridBagConstraints.WEST;
		gbc_labelGlobalInformationDateTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelGlobalInformationDateTitle.gridx = 0;
		gbc_labelGlobalInformationDateTitle.gridy = 0;
		panelGlobalInformationDateTitle.add(labelGlobalInformationDateTitle, gbc_labelGlobalInformationDateTitle);
		
		JPanel panelGlobalInformationDateField = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationDateField = new GridBagConstraints();
		gbc_panelGlobalInformationDateField.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationDateField.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationDateField.gridx = 1;
		gbc_panelGlobalInformationDateField.gridy = 0;
		panelGlobalInformationData.add(panelGlobalInformationDateField, gbc_panelGlobalInformationDateField);
		GridBagLayout gbl_panelGlobalInformationDateField = new GridBagLayout();
		gbl_panelGlobalInformationDateField.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformationDateField.rowHeights = new int[]{0, 0};
		gbl_panelGlobalInformationDateField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformationDateField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelGlobalInformationDateField.setLayout(gbl_panelGlobalInformationDateField);
		
		fieldGlobalInformationDate = new JTextField();
		fieldGlobalInformationDate.setHorizontalAlignment(SwingConstants.CENTER);
		fieldGlobalInformationDate.setEditable(false);
		GridBagConstraints gbc_fieldGlobalInformationDate = new GridBagConstraints();
		gbc_fieldGlobalInformationDate.insets = new Insets(2, 2, 2, 2);
		gbc_fieldGlobalInformationDate.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldGlobalInformationDate.gridx = 0;
		gbc_fieldGlobalInformationDate.gridy = 0;
		panelGlobalInformationDateField.add(fieldGlobalInformationDate, gbc_fieldGlobalInformationDate);
		fieldGlobalInformationDate.setColumns(10);
		
		JPanel panelGlobalInformationTimeTitle = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationTimeTitle = new GridBagConstraints();
		gbc_panelGlobalInformationTimeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationTimeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationTimeTitle.gridx = 2;
		gbc_panelGlobalInformationTimeTitle.gridy = 0;
		panelGlobalInformationData.add(panelGlobalInformationTimeTitle, gbc_panelGlobalInformationTimeTitle);
		GridBagLayout gbl_panelGlobalInformationTimeTitle = new GridBagLayout();
		gbl_panelGlobalInformationTimeTitle.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformationTimeTitle.rowHeights = new int[]{0, 0};
		gbl_panelGlobalInformationTimeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformationTimeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelGlobalInformationTimeTitle.setLayout(gbl_panelGlobalInformationTimeTitle);
		
		JLabel labelGlobalInformationTimeTitle = new JLabel("Time (Z):");
		labelGlobalInformationTimeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelGlobalInformationTimeTitle = new GridBagConstraints();
		gbc_labelGlobalInformationTimeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelGlobalInformationTimeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelGlobalInformationTimeTitle.gridx = 0;
		gbc_labelGlobalInformationTimeTitle.gridy = 0;
		panelGlobalInformationTimeTitle.add(labelGlobalInformationTimeTitle, gbc_labelGlobalInformationTimeTitle);
		
		JPanel panelGlobalInformationTimeField = new JPanel();
		GridBagConstraints gbc_panelGlobalInformationTimeField = new GridBagConstraints();
		gbc_panelGlobalInformationTimeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelGlobalInformationTimeField.fill = GridBagConstraints.BOTH;
		gbc_panelGlobalInformationTimeField.gridx = 3;
		gbc_panelGlobalInformationTimeField.gridy = 0;
		panelGlobalInformationData.add(panelGlobalInformationTimeField, gbc_panelGlobalInformationTimeField);
		GridBagLayout gbl_panelGlobalInformationTimeField = new GridBagLayout();
		gbl_panelGlobalInformationTimeField.columnWidths = new int[]{0, 0};
		gbl_panelGlobalInformationTimeField.rowHeights = new int[]{0, 0};
		gbl_panelGlobalInformationTimeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelGlobalInformationTimeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelGlobalInformationTimeField.setLayout(gbl_panelGlobalInformationTimeField);
		
		fieldGlobalInformationTime = new JTextField();
		fieldGlobalInformationTime.setHorizontalAlignment(SwingConstants.CENTER);
		fieldGlobalInformationTime.setEditable(false);
		GridBagConstraints gbc_fieldGlobalInformationTime = new GridBagConstraints();
		gbc_fieldGlobalInformationTime.insets = new Insets(2, 2, 2, 2);
		gbc_fieldGlobalInformationTime.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldGlobalInformationTime.gridx = 0;
		gbc_fieldGlobalInformationTime.gridy = 0;
		panelGlobalInformationTimeField.add(fieldGlobalInformationTime, gbc_fieldGlobalInformationTime);
		fieldGlobalInformationTime.setColumns(10);
		
		JPanel panelFlightInformation = new JPanel();
		GridBagConstraints gbc_panelFlightInformation = new GridBagConstraints();
		gbc_panelFlightInformation.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformation.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformation.gridx = 0;
		gbc_panelFlightInformation.gridy = 1;
		panelInformation.add(panelFlightInformation, gbc_panelFlightInformation);
		GridBagLayout gbl_panelFlightInformation = new GridBagLayout();
		gbl_panelFlightInformation.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformation.rowHeights = new int[]{0, 0, 0, 0};
		gbl_panelFlightInformation.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformation.rowWeights = new double[]{0.0, 0.0, 1.0, Double.MIN_VALUE};
		panelFlightInformation.setLayout(gbl_panelFlightInformation);
		
		JPanel panelFlightInformationTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationTitle = new GridBagConstraints();
		gbc_panelFlightInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationTitle.gridx = 0;
		gbc_panelFlightInformationTitle.gridy = 0;
		panelFlightInformation.add(panelFlightInformationTitle, gbc_panelFlightInformationTitle);
		GridBagLayout gbl_panelFlightInformationTitle = new GridBagLayout();
		gbl_panelFlightInformationTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelFlightInformationTitle.setLayout(gbl_panelFlightInformationTitle);
		
		JLabel labelFlightInformationTitle = new JLabel("Flight information");
		labelFlightInformationTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelFlightInformationTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationTitle = new GridBagConstraints();
		gbc_labelFlightInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationTitle.fill = GridBagConstraints.HORIZONTAL;
		gbc_labelFlightInformationTitle.gridx = 0;
		gbc_labelFlightInformationTitle.gridy = 0;
		panelFlightInformationTitle.add(labelFlightInformationTitle, gbc_labelFlightInformationTitle);
		
		JSeparator separatorInformation2 = new JSeparator();
		GridBagConstraints gbc_separatorInformation2 = new GridBagConstraints();
		gbc_separatorInformation2.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorInformation2.insets = new Insets(2, 2, 2, 2);
		gbc_separatorInformation2.gridx = 0;
		gbc_separatorInformation2.gridy = 1;
		panelFlightInformation.add(separatorInformation2, gbc_separatorInformation2);
		
		JPanel panelFlightInformationData = new JPanel();
		GridBagConstraints gbc_panelFlightInformationData = new GridBagConstraints();
		gbc_panelFlightInformationData.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationData.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationData.gridx = 0;
		gbc_panelFlightInformationData.gridy = 2;
		panelFlightInformation.add(panelFlightInformationData, gbc_panelFlightInformationData);
		GridBagLayout gbl_panelFlightInformationData = new GridBagLayout();
		gbl_panelFlightInformationData.columnWidths = new int[]{0, 0, 0, 0, 0};
		gbl_panelFlightInformationData.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		gbl_panelFlightInformationData.columnWeights = new double[]{0.0, 1.0, 0.0, 1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationData.rowWeights = new double[]{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, Double.MIN_VALUE};
		panelFlightInformationData.setLayout(gbl_panelFlightInformationData);
		
		JPanel panelFlightInformationCallsignTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationCallsignTitle = new GridBagConstraints();
		gbc_panelFlightInformationCallsignTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationCallsignTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationCallsignTitle.gridx = 0;
		gbc_panelFlightInformationCallsignTitle.gridy = 0;
		panelFlightInformationData.add(panelFlightInformationCallsignTitle, gbc_panelFlightInformationCallsignTitle);
		GridBagLayout gbl_panelFlightInformationCallsignTitle = new GridBagLayout();
		gbl_panelFlightInformationCallsignTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationCallsignTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationCallsignTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationCallsignTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationCallsignTitle.setLayout(gbl_panelFlightInformationCallsignTitle);
		
		JLabel labelFlightInformationCallsignTitle = new JLabel("Callsign:");
		labelFlightInformationCallsignTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationCallsignTitle = new GridBagConstraints();
		gbc_labelFlightInformationCallsignTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationCallsignTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationCallsignTitle.gridx = 0;
		gbc_labelFlightInformationCallsignTitle.gridy = 0;
		panelFlightInformationCallsignTitle.add(labelFlightInformationCallsignTitle, gbc_labelFlightInformationCallsignTitle);
		
		JPanel panelFlightInformationCallsignField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationCallsignField = new GridBagConstraints();
		gbc_panelFlightInformationCallsignField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationCallsignField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationCallsignField.gridx = 1;
		gbc_panelFlightInformationCallsignField.gridy = 0;
		panelFlightInformationData.add(panelFlightInformationCallsignField, gbc_panelFlightInformationCallsignField);
		GridBagLayout gbl_panelFlightInformationCallsignField = new GridBagLayout();
		gbl_panelFlightInformationCallsignField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationCallsignField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationCallsignField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationCallsignField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationCallsignField.setLayout(gbl_panelFlightInformationCallsignField);
		
		fieldFlightInformationCallsign = new JTextField();
		fieldFlightInformationCallsign.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationCallsign.setEditable(false);
		fieldFlightInformationCallsign.setColumns(10);
		GridBagConstraints gbc_fieldFlightInformationCallsign = new GridBagConstraints();
		gbc_fieldFlightInformationCallsign.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationCallsign.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationCallsign.gridx = 0;
		gbc_fieldFlightInformationCallsign.gridy = 0;
		panelFlightInformationCallsignField.add(fieldFlightInformationCallsign, gbc_fieldFlightInformationCallsign);
		
		JPanel panelFlightInformationVIDTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationVIDTitle = new GridBagConstraints();
		gbc_panelFlightInformationVIDTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationVIDTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationVIDTitle.gridx = 2;
		gbc_panelFlightInformationVIDTitle.gridy = 0;
		panelFlightInformationData.add(panelFlightInformationVIDTitle, gbc_panelFlightInformationVIDTitle);
		GridBagLayout gbl_panelFlightInformationVIDTitle = new GridBagLayout();
		gbl_panelFlightInformationVIDTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationVIDTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationVIDTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationVIDTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationVIDTitle.setLayout(gbl_panelFlightInformationVIDTitle);
		
		JLabel labelFlightInformationVIDTitle = new JLabel("VID:");
		labelFlightInformationVIDTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationVIDTitle = new GridBagConstraints();
		gbc_labelFlightInformationVIDTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationVIDTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationVIDTitle.gridx = 0;
		gbc_labelFlightInformationVIDTitle.gridy = 0;
		panelFlightInformationVIDTitle.add(labelFlightInformationVIDTitle, gbc_labelFlightInformationVIDTitle);
		
		JPanel panelFlightInformationVIDField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationVIDField = new GridBagConstraints();
		gbc_panelFlightInformationVIDField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationVIDField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationVIDField.gridx = 3;
		gbc_panelFlightInformationVIDField.gridy = 0;
		panelFlightInformationData.add(panelFlightInformationVIDField, gbc_panelFlightInformationVIDField);
		GridBagLayout gbl_panelFlightInformationVIDField = new GridBagLayout();
		gbl_panelFlightInformationVIDField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationVIDField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationVIDField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationVIDField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationVIDField.setLayout(gbl_panelFlightInformationVIDField);
		
		fieldFlightInformationVID = new JTextField();
		fieldFlightInformationVID.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationVID.setEditable(false);
		fieldFlightInformationVID.setColumns(10);
		GridBagConstraints gbc_fieldFlightInformationVID = new GridBagConstraints();
		gbc_fieldFlightInformationVID.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationVID.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationVID.gridx = 0;
		gbc_fieldFlightInformationVID.gridy = 0;
		panelFlightInformationVIDField.add(fieldFlightInformationVID, gbc_fieldFlightInformationVID);
		
		JPanel panelFlightInformationAircraftTypeTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAircraftTypeTitle = new GridBagConstraints();
		gbc_panelFlightInformationAircraftTypeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAircraftTypeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAircraftTypeTitle.gridx = 0;
		gbc_panelFlightInformationAircraftTypeTitle.gridy = 1;
		panelFlightInformationData.add(panelFlightInformationAircraftTypeTitle, gbc_panelFlightInformationAircraftTypeTitle);
		GridBagLayout gbl_panelFlightInformationAircraftTypeTitle = new GridBagLayout();
		gbl_panelFlightInformationAircraftTypeTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAircraftTypeTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAircraftTypeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAircraftTypeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAircraftTypeTitle.setLayout(gbl_panelFlightInformationAircraftTypeTitle);
		
		JLabel labelFlightInformationAircraftTypeTitle = new JLabel("Aircraft type:");
		labelFlightInformationAircraftTypeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationAircraftTypeTitle = new GridBagConstraints();
		gbc_labelFlightInformationAircraftTypeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationAircraftTypeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationAircraftTypeTitle.gridx = 0;
		gbc_labelFlightInformationAircraftTypeTitle.gridy = 0;
		panelFlightInformationAircraftTypeTitle.add(labelFlightInformationAircraftTypeTitle, gbc_labelFlightInformationAircraftTypeTitle);
		
		JPanel panelFlightInformationAircraftTypeField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAircraftTypeField = new GridBagConstraints();
		gbc_panelFlightInformationAircraftTypeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAircraftTypeField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAircraftTypeField.gridx = 1;
		gbc_panelFlightInformationAircraftTypeField.gridy = 1;
		panelFlightInformationData.add(panelFlightInformationAircraftTypeField, gbc_panelFlightInformationAircraftTypeField);
		GridBagLayout gbl_panelFlightInformationAircraftTypeField = new GridBagLayout();
		gbl_panelFlightInformationAircraftTypeField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAircraftTypeField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAircraftTypeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAircraftTypeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAircraftTypeField.setLayout(gbl_panelFlightInformationAircraftTypeField);
		
		fieldFlightInformationAircraftType = new JTextField();
		fieldFlightInformationAircraftType.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationAircraftType.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationAircraftType = new GridBagConstraints();
		gbc_fieldFlightInformationAircraftType.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationAircraftType.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationAircraftType.gridx = 0;
		gbc_fieldFlightInformationAircraftType.gridy = 0;
		panelFlightInformationAircraftTypeField.add(fieldFlightInformationAircraftType, gbc_fieldFlightInformationAircraftType);
		fieldFlightInformationAircraftType.setColumns(10);
		
		JPanel panelFlightInformationFlightTypeTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFlightTypeTitle = new GridBagConstraints();
		gbc_panelFlightInformationFlightTypeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFlightTypeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFlightTypeTitle.gridx = 2;
		gbc_panelFlightInformationFlightTypeTitle.gridy = 1;
		panelFlightInformationData.add(panelFlightInformationFlightTypeTitle, gbc_panelFlightInformationFlightTypeTitle);
		GridBagLayout gbl_panelFlightInformationFlightTypeTitle = new GridBagLayout();
		gbl_panelFlightInformationFlightTypeTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFlightTypeTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFlightTypeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFlightTypeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFlightTypeTitle.setLayout(gbl_panelFlightInformationFlightTypeTitle);
		
		JLabel labelFlightInformationFlightTypeTitle = new JLabel("Flight type:");
		labelFlightInformationFlightTypeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationFlightTypeTitle = new GridBagConstraints();
		gbc_labelFlightInformationFlightTypeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationFlightTypeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationFlightTypeTitle.gridx = 0;
		gbc_labelFlightInformationFlightTypeTitle.gridy = 0;
		panelFlightInformationFlightTypeTitle.add(labelFlightInformationFlightTypeTitle, gbc_labelFlightInformationFlightTypeTitle);
		
		JPanel panelFlightInformationFlightTypeField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFlightTypeField = new GridBagConstraints();
		gbc_panelFlightInformationFlightTypeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFlightTypeField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFlightTypeField.gridx = 3;
		gbc_panelFlightInformationFlightTypeField.gridy = 1;
		panelFlightInformationData.add(panelFlightInformationFlightTypeField, gbc_panelFlightInformationFlightTypeField);
		GridBagLayout gbl_panelFlightInformationFlightTypeField = new GridBagLayout();
		gbl_panelFlightInformationFlightTypeField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFlightTypeField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFlightTypeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFlightTypeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFlightTypeField.setLayout(gbl_panelFlightInformationFlightTypeField);
		
		fieldFlightInformationFlightType = new JTextField();
		fieldFlightInformationFlightType.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationFlightType.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationFlightType = new GridBagConstraints();
		gbc_fieldFlightInformationFlightType.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationFlightType.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationFlightType.gridx = 0;
		gbc_fieldFlightInformationFlightType.gridy = 0;
		panelFlightInformationFlightTypeField.add(fieldFlightInformationFlightType, gbc_fieldFlightInformationFlightType);
		fieldFlightInformationFlightType.setColumns(10);
		
		JPanel panelFlightInformationAltitudeFPTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAltitudeFPTitle = new GridBagConstraints();
		gbc_panelFlightInformationAltitudeFPTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAltitudeFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAltitudeFPTitle.gridx = 0;
		gbc_panelFlightInformationAltitudeFPTitle.gridy = 2;
		panelFlightInformationData.add(panelFlightInformationAltitudeFPTitle, gbc_panelFlightInformationAltitudeFPTitle);
		GridBagLayout gbl_panelFlightInformationAltitudeFPTitle = new GridBagLayout();
		gbl_panelFlightInformationAltitudeFPTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeFPTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeFPTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAltitudeFPTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAltitudeFPTitle.setLayout(gbl_panelFlightInformationAltitudeFPTitle);
		
		JLabel labelFlightInformationAltitudeFPTitle = new JLabel("Altitude (FP):");
		labelFlightInformationAltitudeFPTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationAltitudeFPTitle = new GridBagConstraints();
		gbc_labelFlightInformationAltitudeFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationAltitudeFPTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationAltitudeFPTitle.gridx = 0;
		gbc_labelFlightInformationAltitudeFPTitle.gridy = 0;
		panelFlightInformationAltitudeFPTitle.add(labelFlightInformationAltitudeFPTitle, gbc_labelFlightInformationAltitudeFPTitle);
		
		JPanel panelFlightInformationAltitudeFPField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAltitudeFPField = new GridBagConstraints();
		gbc_panelFlightInformationAltitudeFPField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAltitudeFPField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAltitudeFPField.gridx = 1;
		gbc_panelFlightInformationAltitudeFPField.gridy = 2;
		panelFlightInformationData.add(panelFlightInformationAltitudeFPField, gbc_panelFlightInformationAltitudeFPField);
		GridBagLayout gbl_panelFlightInformationAltitudeFPField = new GridBagLayout();
		gbl_panelFlightInformationAltitudeFPField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeFPField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeFPField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAltitudeFPField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAltitudeFPField.setLayout(gbl_panelFlightInformationAltitudeFPField);
		
		fieldFlightInformationAltitudeFP = new JTextField();
		fieldFlightInformationAltitudeFP.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationAltitudeFP.setEditable(false);
		fieldFlightInformationAltitudeFP.setColumns(10);
		GridBagConstraints gbc_fieldFlightInformationAltitudeFP = new GridBagConstraints();
		gbc_fieldFlightInformationAltitudeFP.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationAltitudeFP.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationAltitudeFP.gridx = 0;
		gbc_fieldFlightInformationAltitudeFP.gridy = 0;
		panelFlightInformationAltitudeFPField.add(fieldFlightInformationAltitudeFP, gbc_fieldFlightInformationAltitudeFP);
		
		JPanel panelFlightInformationAltitudeCurrentTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAltitudeCurrentTitle = new GridBagConstraints();
		gbc_panelFlightInformationAltitudeCurrentTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAltitudeCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAltitudeCurrentTitle.gridx = 2;
		gbc_panelFlightInformationAltitudeCurrentTitle.gridy = 2;
		panelFlightInformationData.add(panelFlightInformationAltitudeCurrentTitle, gbc_panelFlightInformationAltitudeCurrentTitle);
		GridBagLayout gbl_panelFlightInformationAltitudeCurrentTitle = new GridBagLayout();
		gbl_panelFlightInformationAltitudeCurrentTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeCurrentTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAltitudeCurrentTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAltitudeCurrentTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAltitudeCurrentTitle.setLayout(gbl_panelFlightInformationAltitudeCurrentTitle);
		
		JLabel labelFlightInformationAltitudeCurrentTitle = new JLabel("Altitude (current):");
		labelFlightInformationAltitudeCurrentTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationAltitudeCurrentTitle = new GridBagConstraints();
		gbc_labelFlightInformationAltitudeCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationAltitudeCurrentTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationAltitudeCurrentTitle.gridx = 0;
		gbc_labelFlightInformationAltitudeCurrentTitle.gridy = 0;
		panelFlightInformationAltitudeCurrentTitle.add(labelFlightInformationAltitudeCurrentTitle, gbc_labelFlightInformationAltitudeCurrentTitle);
		
		JPanel panelFlightInformationAltitideCurrentField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAltitideCurrentField = new GridBagConstraints();
		gbc_panelFlightInformationAltitideCurrentField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAltitideCurrentField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAltitideCurrentField.gridx = 3;
		gbc_panelFlightInformationAltitideCurrentField.gridy = 2;
		panelFlightInformationData.add(panelFlightInformationAltitideCurrentField, gbc_panelFlightInformationAltitideCurrentField);
		GridBagLayout gbl_panelFlightInformationAltitideCurrentField = new GridBagLayout();
		gbl_panelFlightInformationAltitideCurrentField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAltitideCurrentField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAltitideCurrentField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAltitideCurrentField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAltitideCurrentField.setLayout(gbl_panelFlightInformationAltitideCurrentField);
		
		fieldFlightInformationAltitideCurrent = new JTextField();
		fieldFlightInformationAltitideCurrent.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationAltitideCurrent.setEditable(false);
		fieldFlightInformationAltitideCurrent.setColumns(10);
		GridBagConstraints gbc_fieldFlightInformationAltitideCurrent = new GridBagConstraints();
		gbc_fieldFlightInformationAltitideCurrent.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationAltitideCurrent.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationAltitideCurrent.gridx = 0;
		gbc_fieldFlightInformationAltitideCurrent.gridy = 0;
		panelFlightInformationAltitideCurrentField.add(fieldFlightInformationAltitideCurrent, gbc_fieldFlightInformationAltitideCurrent);
		
		JPanel panelFlightInformationGroundSpeedFPTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationGroundSpeedFPTitle = new GridBagConstraints();
		gbc_panelFlightInformationGroundSpeedFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationGroundSpeedFPTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationGroundSpeedFPTitle.gridx = 0;
		gbc_panelFlightInformationGroundSpeedFPTitle.gridy = 3;
		panelFlightInformationData.add(panelFlightInformationGroundSpeedFPTitle, gbc_panelFlightInformationGroundSpeedFPTitle);
		GridBagLayout gbl_panelFlightInformationGroundSpeedFPTitle = new GridBagLayout();
		gbl_panelFlightInformationGroundSpeedFPTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedFPTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedFPTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationGroundSpeedFPTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationGroundSpeedFPTitle.setLayout(gbl_panelFlightInformationGroundSpeedFPTitle);
		
		JLabel labelFlightInformationGroundSpeedFPTitle = new JLabel("Ground speed (FP):");
		labelFlightInformationGroundSpeedFPTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationGroundSpeedFPTitle = new GridBagConstraints();
		gbc_labelFlightInformationGroundSpeedFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationGroundSpeedFPTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationGroundSpeedFPTitle.gridx = 0;
		gbc_labelFlightInformationGroundSpeedFPTitle.gridy = 0;
		panelFlightInformationGroundSpeedFPTitle.add(labelFlightInformationGroundSpeedFPTitle, gbc_labelFlightInformationGroundSpeedFPTitle);
		
		JPanel panelFlightInformationGroundSpeedFPField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationGroundSpeedFPField = new GridBagConstraints();
		gbc_panelFlightInformationGroundSpeedFPField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationGroundSpeedFPField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationGroundSpeedFPField.gridx = 1;
		gbc_panelFlightInformationGroundSpeedFPField.gridy = 3;
		panelFlightInformationData.add(panelFlightInformationGroundSpeedFPField, gbc_panelFlightInformationGroundSpeedFPField);
		GridBagLayout gbl_panelFlightInformationGroundSpeedFPField = new GridBagLayout();
		gbl_panelFlightInformationGroundSpeedFPField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedFPField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedFPField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationGroundSpeedFPField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationGroundSpeedFPField.setLayout(gbl_panelFlightInformationGroundSpeedFPField);
		
		fieldFlightInformationGroundSpeedFP = new JTextField();
		fieldFlightInformationGroundSpeedFP.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationGroundSpeedFP.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationGroundSpeedFP = new GridBagConstraints();
		gbc_fieldFlightInformationGroundSpeedFP.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationGroundSpeedFP.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationGroundSpeedFP.gridx = 0;
		gbc_fieldFlightInformationGroundSpeedFP.gridy = 0;
		panelFlightInformationGroundSpeedFPField.add(fieldFlightInformationGroundSpeedFP, gbc_fieldFlightInformationGroundSpeedFP);
		fieldFlightInformationGroundSpeedFP.setColumns(10);
		
		JPanel panelFlightInformationGroundSpeedCurrentTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationGroundSpeedCurrentTitle = new GridBagConstraints();
		gbc_panelFlightInformationGroundSpeedCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationGroundSpeedCurrentTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationGroundSpeedCurrentTitle.gridx = 2;
		gbc_panelFlightInformationGroundSpeedCurrentTitle.gridy = 3;
		panelFlightInformationData.add(panelFlightInformationGroundSpeedCurrentTitle, gbc_panelFlightInformationGroundSpeedCurrentTitle);
		GridBagLayout gbl_panelFlightInformationGroundSpeedCurrentTitle = new GridBagLayout();
		gbl_panelFlightInformationGroundSpeedCurrentTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedCurrentTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedCurrentTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationGroundSpeedCurrentTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationGroundSpeedCurrentTitle.setLayout(gbl_panelFlightInformationGroundSpeedCurrentTitle);
		
		JLabel labelFlightInformationGroundSpeedCurrentTitle = new JLabel("Ground speed (current):");
		labelFlightInformationGroundSpeedCurrentTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationGroundSpeedCurrentTitle = new GridBagConstraints();
		gbc_labelFlightInformationGroundSpeedCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationGroundSpeedCurrentTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationGroundSpeedCurrentTitle.gridx = 0;
		gbc_labelFlightInformationGroundSpeedCurrentTitle.gridy = 0;
		panelFlightInformationGroundSpeedCurrentTitle.add(labelFlightInformationGroundSpeedCurrentTitle, gbc_labelFlightInformationGroundSpeedCurrentTitle);
		
		JPanel panelFlightInformationGroundSpeedCurrentField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationGroundSpeedCurrentField = new GridBagConstraints();
		gbc_panelFlightInformationGroundSpeedCurrentField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationGroundSpeedCurrentField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationGroundSpeedCurrentField.gridx = 3;
		gbc_panelFlightInformationGroundSpeedCurrentField.gridy = 3;
		panelFlightInformationData.add(panelFlightInformationGroundSpeedCurrentField, gbc_panelFlightInformationGroundSpeedCurrentField);
		GridBagLayout gbl_panelFlightInformationGroundSpeedCurrentField = new GridBagLayout();
		gbl_panelFlightInformationGroundSpeedCurrentField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedCurrentField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationGroundSpeedCurrentField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationGroundSpeedCurrentField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationGroundSpeedCurrentField.setLayout(gbl_panelFlightInformationGroundSpeedCurrentField);
		
		fieldFlightInformationGroundSpeedCurrent = new JTextField();
		fieldFlightInformationGroundSpeedCurrent.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationGroundSpeedCurrent.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationGroundSpeedCurrent = new GridBagConstraints();
		gbc_fieldFlightInformationGroundSpeedCurrent.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationGroundSpeedCurrent.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationGroundSpeedCurrent.gridx = 0;
		gbc_fieldFlightInformationGroundSpeedCurrent.gridy = 0;
		panelFlightInformationGroundSpeedCurrentField.add(fieldFlightInformationGroundSpeedCurrent, gbc_fieldFlightInformationGroundSpeedCurrent);
		fieldFlightInformationGroundSpeedCurrent.setColumns(10);
		
		JPanel panelFlightInformationSquawkATCTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationSquawkATCTitle = new GridBagConstraints();
		gbc_panelFlightInformationSquawkATCTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationSquawkATCTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationSquawkATCTitle.gridx = 0;
		gbc_panelFlightInformationSquawkATCTitle.gridy = 4;
		panelFlightInformationData.add(panelFlightInformationSquawkATCTitle, gbc_panelFlightInformationSquawkATCTitle);
		GridBagLayout gbl_panelFlightInformationSquawkATCTitle = new GridBagLayout();
		gbl_panelFlightInformationSquawkATCTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationSquawkATCTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationSquawkATCTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationSquawkATCTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationSquawkATCTitle.setLayout(gbl_panelFlightInformationSquawkATCTitle);
		
		JLabel labelFlightInformationSquawkATCTitle = new JLabel("Squawk (ATC):");
		labelFlightInformationSquawkATCTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationSquawkATCTitle = new GridBagConstraints();
		gbc_labelFlightInformationSquawkATCTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationSquawkATCTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationSquawkATCTitle.gridx = 0;
		gbc_labelFlightInformationSquawkATCTitle.gridy = 0;
		panelFlightInformationSquawkATCTitle.add(labelFlightInformationSquawkATCTitle, gbc_labelFlightInformationSquawkATCTitle);
		
		JPanel panelFlightInformationSquawkATCField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationSquawkATCField = new GridBagConstraints();
		gbc_panelFlightInformationSquawkATCField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationSquawkATCField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationSquawkATCField.gridx = 1;
		gbc_panelFlightInformationSquawkATCField.gridy = 4;
		panelFlightInformationData.add(panelFlightInformationSquawkATCField, gbc_panelFlightInformationSquawkATCField);
		GridBagLayout gbl_panelFlightInformationSquawkATCField = new GridBagLayout();
		gbl_panelFlightInformationSquawkATCField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationSquawkATCField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationSquawkATCField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationSquawkATCField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationSquawkATCField.setLayout(gbl_panelFlightInformationSquawkATCField);
		
		fieldFlightInformationSquawkATC = new JTextField();
		fieldFlightInformationSquawkATC.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationSquawkATC.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationSquawkATC = new GridBagConstraints();
		gbc_fieldFlightInformationSquawkATC.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationSquawkATC.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationSquawkATC.gridx = 0;
		gbc_fieldFlightInformationSquawkATC.gridy = 0;
		panelFlightInformationSquawkATCField.add(fieldFlightInformationSquawkATC, gbc_fieldFlightInformationSquawkATC);
		fieldFlightInformationSquawkATC.setColumns(10);
		
		JPanel panelFlightInformationSquawkCurrentTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationSquawkCurrentTitle = new GridBagConstraints();
		gbc_panelFlightInformationSquawkCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationSquawkCurrentTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationSquawkCurrentTitle.gridx = 2;
		gbc_panelFlightInformationSquawkCurrentTitle.gridy = 4;
		panelFlightInformationData.add(panelFlightInformationSquawkCurrentTitle, gbc_panelFlightInformationSquawkCurrentTitle);
		GridBagLayout gbl_panelFlightInformationSquawkCurrentTitle = new GridBagLayout();
		gbl_panelFlightInformationSquawkCurrentTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationSquawkCurrentTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationSquawkCurrentTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationSquawkCurrentTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationSquawkCurrentTitle.setLayout(gbl_panelFlightInformationSquawkCurrentTitle);
		
		JLabel labelFlightInformationSquawkCurrentTitle = new JLabel("Squawk (current):");
		labelFlightInformationSquawkCurrentTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationSquawkCurrentTitle = new GridBagConstraints();
		gbc_labelFlightInformationSquawkCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationSquawkCurrentTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationSquawkCurrentTitle.gridx = 0;
		gbc_labelFlightInformationSquawkCurrentTitle.gridy = 0;
		panelFlightInformationSquawkCurrentTitle.add(labelFlightInformationSquawkCurrentTitle, gbc_labelFlightInformationSquawkCurrentTitle);
		
		JPanel panelFlightInformationSquawkCurrentField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationSquawkCurrentField = new GridBagConstraints();
		gbc_panelFlightInformationSquawkCurrentField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationSquawkCurrentField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationSquawkCurrentField.gridx = 3;
		gbc_panelFlightInformationSquawkCurrentField.gridy = 4;
		panelFlightInformationData.add(panelFlightInformationSquawkCurrentField, gbc_panelFlightInformationSquawkCurrentField);
		GridBagLayout gbl_panelFlightInformationSquawkCurrentField = new GridBagLayout();
		gbl_panelFlightInformationSquawkCurrentField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationSquawkCurrentField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationSquawkCurrentField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationSquawkCurrentField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationSquawkCurrentField.setLayout(gbl_panelFlightInformationSquawkCurrentField);
		
		fieldFlightInformationSquawkCurrent = new JTextField();
		fieldFlightInformationSquawkCurrent.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationSquawkCurrent.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationSquawkCurrent = new GridBagConstraints();
		gbc_fieldFlightInformationSquawkCurrent.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationSquawkCurrent.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationSquawkCurrent.gridx = 0;
		gbc_fieldFlightInformationSquawkCurrent.gridy = 0;
		panelFlightInformationSquawkCurrentField.add(fieldFlightInformationSquawkCurrent, gbc_fieldFlightInformationSquawkCurrent);
		fieldFlightInformationSquawkCurrent.setColumns(10);
		
		JPanel panelFlightInformationFlightRuleTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFlightRuleTitle = new GridBagConstraints();
		gbc_panelFlightInformationFlightRuleTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFlightRuleTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFlightRuleTitle.gridx = 0;
		gbc_panelFlightInformationFlightRuleTitle.gridy = 5;
		panelFlightInformationData.add(panelFlightInformationFlightRuleTitle, gbc_panelFlightInformationFlightRuleTitle);
		GridBagLayout gbl_panelFlightInformationFlightRuleTitle = new GridBagLayout();
		gbl_panelFlightInformationFlightRuleTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFlightRuleTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFlightRuleTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFlightRuleTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFlightRuleTitle.setLayout(gbl_panelFlightInformationFlightRuleTitle);
		
		JLabel labelFlightInformationFlightRuleTitle = new JLabel("Flight rule:");
		labelFlightInformationFlightRuleTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationFlightRuleTitle = new GridBagConstraints();
		gbc_labelFlightInformationFlightRuleTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationFlightRuleTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationFlightRuleTitle.gridx = 0;
		gbc_labelFlightInformationFlightRuleTitle.gridy = 0;
		panelFlightInformationFlightRuleTitle.add(labelFlightInformationFlightRuleTitle, gbc_labelFlightInformationFlightRuleTitle);
		
		JPanel panelFlightInformationFlightRuleField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFlightRuleField = new GridBagConstraints();
		gbc_panelFlightInformationFlightRuleField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFlightRuleField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFlightRuleField.gridx = 1;
		gbc_panelFlightInformationFlightRuleField.gridy = 5;
		panelFlightInformationData.add(panelFlightInformationFlightRuleField, gbc_panelFlightInformationFlightRuleField);
		GridBagLayout gbl_panelFlightInformationFlightRuleField = new GridBagLayout();
		gbl_panelFlightInformationFlightRuleField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFlightRuleField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFlightRuleField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFlightRuleField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFlightRuleField.setLayout(gbl_panelFlightInformationFlightRuleField);
		
		fieldFlightInformationFlightRule = new JTextField();
		fieldFlightInformationFlightRule.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationFlightRule.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationFlightRule = new GridBagConstraints();
		gbc_fieldFlightInformationFlightRule.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationFlightRule.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationFlightRule.gridx = 0;
		gbc_fieldFlightInformationFlightRule.gridy = 0;
		panelFlightInformationFlightRuleField.add(fieldFlightInformationFlightRule, gbc_fieldFlightInformationFlightRule);
		fieldFlightInformationFlightRule.setColumns(10);
		
		JPanel panelFlightInformationExitSchemeTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationExitSchemeTitle = new GridBagConstraints();
		gbc_panelFlightInformationExitSchemeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationExitSchemeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationExitSchemeTitle.gridx = 2;
		gbc_panelFlightInformationExitSchemeTitle.gridy = 5;
		panelFlightInformationData.add(panelFlightInformationExitSchemeTitle, gbc_panelFlightInformationExitSchemeTitle);
		GridBagLayout gbl_panelFlightInformationExitSchemeTitle = new GridBagLayout();
		gbl_panelFlightInformationExitSchemeTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationExitSchemeTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationExitSchemeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationExitSchemeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationExitSchemeTitle.setLayout(gbl_panelFlightInformationExitSchemeTitle);
		
		JLabel labelFlightInformationExitSchemeTitle = new JLabel("Exit scheme:");
		labelFlightInformationExitSchemeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationExitSchemeTitle = new GridBagConstraints();
		gbc_labelFlightInformationExitSchemeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationExitSchemeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationExitSchemeTitle.gridx = 0;
		gbc_labelFlightInformationExitSchemeTitle.gridy = 0;
		panelFlightInformationExitSchemeTitle.add(labelFlightInformationExitSchemeTitle, gbc_labelFlightInformationExitSchemeTitle);
		
		JPanel panelFlightInformationExitSchemeField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationExitSchemeField = new GridBagConstraints();
		gbc_panelFlightInformationExitSchemeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationExitSchemeField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationExitSchemeField.gridx = 3;
		gbc_panelFlightInformationExitSchemeField.gridy = 5;
		panelFlightInformationData.add(panelFlightInformationExitSchemeField, gbc_panelFlightInformationExitSchemeField);
		GridBagLayout gbl_panelFlightInformationExitSchemeField = new GridBagLayout();
		gbl_panelFlightInformationExitSchemeField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationExitSchemeField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationExitSchemeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationExitSchemeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationExitSchemeField.setLayout(gbl_panelFlightInformationExitSchemeField);
		
		fieldFlightInformationExitScheme = new JTextField();
		fieldFlightInformationExitScheme.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationExitScheme.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationExitScheme = new GridBagConstraints();
		gbc_fieldFlightInformationExitScheme.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationExitScheme.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationExitScheme.gridx = 0;
		gbc_fieldFlightInformationExitScheme.gridy = 0;
		panelFlightInformationExitSchemeField.add(fieldFlightInformationExitScheme, gbc_fieldFlightInformationExitScheme);
		fieldFlightInformationExitScheme.setColumns(10);
		
		JPanel panelFlightInformationDepartureTimeFPTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureTimeFPTitle = new GridBagConstraints();
		gbc_panelFlightInformationDepartureTimeFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureTimeFPTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureTimeFPTitle.gridx = 0;
		gbc_panelFlightInformationDepartureTimeFPTitle.gridy = 6;
		panelFlightInformationData.add(panelFlightInformationDepartureTimeFPTitle, gbc_panelFlightInformationDepartureTimeFPTitle);
		GridBagLayout gbl_panelFlightInformationDepartureTimeFPTitle = new GridBagLayout();
		gbl_panelFlightInformationDepartureTimeFPTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeFPTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeFPTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureTimeFPTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureTimeFPTitle.setLayout(gbl_panelFlightInformationDepartureTimeFPTitle);
		
		JLabel labelFlightInformationDepartureTimeFPTitle = new JLabel("Departure time (FP):");
		labelFlightInformationDepartureTimeFPTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationDepartureTimeFPTitle = new GridBagConstraints();
		gbc_labelFlightInformationDepartureTimeFPTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationDepartureTimeFPTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationDepartureTimeFPTitle.gridx = 0;
		gbc_labelFlightInformationDepartureTimeFPTitle.gridy = 0;
		panelFlightInformationDepartureTimeFPTitle.add(labelFlightInformationDepartureTimeFPTitle, gbc_labelFlightInformationDepartureTimeFPTitle);
		
		JPanel panelFlightInformationDepartureTimeFPField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureTimeFPField = new GridBagConstraints();
		gbc_panelFlightInformationDepartureTimeFPField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureTimeFPField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureTimeFPField.gridx = 1;
		gbc_panelFlightInformationDepartureTimeFPField.gridy = 6;
		panelFlightInformationData.add(panelFlightInformationDepartureTimeFPField, gbc_panelFlightInformationDepartureTimeFPField);
		GridBagLayout gbl_panelFlightInformationDepartureTimeFPField = new GridBagLayout();
		gbl_panelFlightInformationDepartureTimeFPField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeFPField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeFPField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureTimeFPField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureTimeFPField.setLayout(gbl_panelFlightInformationDepartureTimeFPField);
		
		fieldFlightInformationDepartureTimeFP = new JTextField();
		fieldFlightInformationDepartureTimeFP.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationDepartureTimeFP.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationDepartureTimeFP = new GridBagConstraints();
		gbc_fieldFlightInformationDepartureTimeFP.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationDepartureTimeFP.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationDepartureTimeFP.gridx = 0;
		gbc_fieldFlightInformationDepartureTimeFP.gridy = 0;
		panelFlightInformationDepartureTimeFPField.add(fieldFlightInformationDepartureTimeFP, gbc_fieldFlightInformationDepartureTimeFP);
		fieldFlightInformationDepartureTimeFP.setColumns(10);
		
		JPanel panelFlightInformationDepartureTimeCurrentTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureTimeCurrentTitle = new GridBagConstraints();
		gbc_panelFlightInformationDepartureTimeCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureTimeCurrentTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureTimeCurrentTitle.gridx = 2;
		gbc_panelFlightInformationDepartureTimeCurrentTitle.gridy = 6;
		panelFlightInformationData.add(panelFlightInformationDepartureTimeCurrentTitle, gbc_panelFlightInformationDepartureTimeCurrentTitle);
		GridBagLayout gbl_panelFlightInformationDepartureTimeCurrentTitle = new GridBagLayout();
		gbl_panelFlightInformationDepartureTimeCurrentTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeCurrentTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeCurrentTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureTimeCurrentTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureTimeCurrentTitle.setLayout(gbl_panelFlightInformationDepartureTimeCurrentTitle);
		
		JLabel labelFlightInformationDepartureTimeCurrentTitle = new JLabel("Departure time (current):");
		labelFlightInformationDepartureTimeCurrentTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationDepartureTimeCurrentTitle = new GridBagConstraints();
		gbc_labelFlightInformationDepartureTimeCurrentTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationDepartureTimeCurrentTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationDepartureTimeCurrentTitle.gridx = 0;
		gbc_labelFlightInformationDepartureTimeCurrentTitle.gridy = 0;
		panelFlightInformationDepartureTimeCurrentTitle.add(labelFlightInformationDepartureTimeCurrentTitle, gbc_labelFlightInformationDepartureTimeCurrentTitle);
		
		JPanel panelFlightInformationDepartureTimeCurrentField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureTimeCurrentField = new GridBagConstraints();
		gbc_panelFlightInformationDepartureTimeCurrentField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureTimeCurrentField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureTimeCurrentField.gridx = 3;
		gbc_panelFlightInformationDepartureTimeCurrentField.gridy = 6;
		panelFlightInformationData.add(panelFlightInformationDepartureTimeCurrentField, gbc_panelFlightInformationDepartureTimeCurrentField);
		GridBagLayout gbl_panelFlightInformationDepartureTimeCurrentField = new GridBagLayout();
		gbl_panelFlightInformationDepartureTimeCurrentField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeCurrentField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureTimeCurrentField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureTimeCurrentField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureTimeCurrentField.setLayout(gbl_panelFlightInformationDepartureTimeCurrentField);
		
		fieldFlightInformationDepartureTimeCurrent = new JTextField();
		fieldFlightInformationDepartureTimeCurrent.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationDepartureTimeCurrent.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationDepartureTimeCurrent = new GridBagConstraints();
		gbc_fieldFlightInformationDepartureTimeCurrent.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationDepartureTimeCurrent.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationDepartureTimeCurrent.gridx = 0;
		gbc_fieldFlightInformationDepartureTimeCurrent.gridy = 0;
		panelFlightInformationDepartureTimeCurrentField.add(fieldFlightInformationDepartureTimeCurrent, gbc_fieldFlightInformationDepartureTimeCurrent);
		fieldFlightInformationDepartureTimeCurrent.setColumns(10);
		
		JPanel panelFlightInformationEETTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationEETTitle = new GridBagConstraints();
		gbc_panelFlightInformationEETTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationEETTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationEETTitle.gridx = 0;
		gbc_panelFlightInformationEETTitle.gridy = 7;
		panelFlightInformationData.add(panelFlightInformationEETTitle, gbc_panelFlightInformationEETTitle);
		GridBagLayout gbl_panelFlightInformationEETTitle = new GridBagLayout();
		gbl_panelFlightInformationEETTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationEETTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationEETTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationEETTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationEETTitle.setLayout(gbl_panelFlightInformationEETTitle);
		
		JLabel labelFlightInformationEETTitle = new JLabel("Estimated enroute time:");
		labelFlightInformationEETTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationEETTitle = new GridBagConstraints();
		gbc_labelFlightInformationEETTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationEETTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationEETTitle.gridx = 0;
		gbc_labelFlightInformationEETTitle.gridy = 0;
		panelFlightInformationEETTitle.add(labelFlightInformationEETTitle, gbc_labelFlightInformationEETTitle);
		
		JPanel panelFlightInformationEETField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationEETField = new GridBagConstraints();
		gbc_panelFlightInformationEETField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationEETField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationEETField.gridx = 1;
		gbc_panelFlightInformationEETField.gridy = 7;
		panelFlightInformationData.add(panelFlightInformationEETField, gbc_panelFlightInformationEETField);
		GridBagLayout gbl_panelFlightInformationEETField = new GridBagLayout();
		gbl_panelFlightInformationEETField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationEETField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationEETField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationEETField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationEETField.setLayout(gbl_panelFlightInformationEETField);
		
		fieldFlightInformationEET = new JTextField();
		fieldFlightInformationEET.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationEET.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationEET = new GridBagConstraints();
		gbc_fieldFlightInformationEET.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationEET.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationEET.gridx = 0;
		gbc_fieldFlightInformationEET.gridy = 0;
		panelFlightInformationEETField.add(fieldFlightInformationEET, gbc_fieldFlightInformationEET);
		fieldFlightInformationEET.setColumns(10);
		
		JPanel panelFlightInformationFOBTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFOBTitle = new GridBagConstraints();
		gbc_panelFlightInformationFOBTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFOBTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFOBTitle.gridx = 2;
		gbc_panelFlightInformationFOBTitle.gridy = 7;
		panelFlightInformationData.add(panelFlightInformationFOBTitle, gbc_panelFlightInformationFOBTitle);
		GridBagLayout gbl_panelFlightInformationFOBTitle = new GridBagLayout();
		gbl_panelFlightInformationFOBTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFOBTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFOBTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFOBTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFOBTitle.setLayout(gbl_panelFlightInformationFOBTitle);
		
		JLabel labelFlightInformationFOBTitle = new JLabel("Fuel on board:");
		labelFlightInformationFOBTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationFOBTitle = new GridBagConstraints();
		gbc_labelFlightInformationFOBTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationFOBTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationFOBTitle.gridx = 0;
		gbc_labelFlightInformationFOBTitle.gridy = 0;
		panelFlightInformationFOBTitle.add(labelFlightInformationFOBTitle, gbc_labelFlightInformationFOBTitle);
		
		JPanel panelFlightInformationFOBField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationFOBField = new GridBagConstraints();
		gbc_panelFlightInformationFOBField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationFOBField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationFOBField.gridx = 3;
		gbc_panelFlightInformationFOBField.gridy = 7;
		panelFlightInformationData.add(panelFlightInformationFOBField, gbc_panelFlightInformationFOBField);
		GridBagLayout gbl_panelFlightInformationFOBField = new GridBagLayout();
		gbl_panelFlightInformationFOBField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationFOBField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationFOBField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationFOBField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationFOBField.setLayout(gbl_panelFlightInformationFOBField);
		
		fieldFlightInformationFOB = new JTextField();
		fieldFlightInformationFOB.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationFOB.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationFOB = new GridBagConstraints();
		gbc_fieldFlightInformationFOB.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationFOB.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationFOB.gridx = 0;
		gbc_fieldFlightInformationFOB.gridy = 0;
		panelFlightInformationFOBField.add(fieldFlightInformationFOB, gbc_fieldFlightInformationFOB);
		fieldFlightInformationFOB.setColumns(10);
		
		JPanel panelFlightInformationDepartureAirportTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureAirportTitle = new GridBagConstraints();
		gbc_panelFlightInformationDepartureAirportTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureAirportTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureAirportTitle.gridx = 0;
		gbc_panelFlightInformationDepartureAirportTitle.gridy = 8;
		panelFlightInformationData.add(panelFlightInformationDepartureAirportTitle, gbc_panelFlightInformationDepartureAirportTitle);
		GridBagLayout gbl_panelFlightInformationDepartureAirportTitle = new GridBagLayout();
		gbl_panelFlightInformationDepartureAirportTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureAirportTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureAirportTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureAirportTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureAirportTitle.setLayout(gbl_panelFlightInformationDepartureAirportTitle);
		
		JLabel labelFlightInformationDepartureAirportTitle = new JLabel("Departure airport:");
		labelFlightInformationDepartureAirportTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationDepartureAirportTitle = new GridBagConstraints();
		gbc_labelFlightInformationDepartureAirportTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationDepartureAirportTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationDepartureAirportTitle.gridx = 0;
		gbc_labelFlightInformationDepartureAirportTitle.gridy = 0;
		panelFlightInformationDepartureAirportTitle.add(labelFlightInformationDepartureAirportTitle, gbc_labelFlightInformationDepartureAirportTitle);
		
		JPanel panelFlightInformationDepartureAirportField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDepartureAirportField = new GridBagConstraints();
		gbc_panelFlightInformationDepartureAirportField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDepartureAirportField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDepartureAirportField.gridx = 1;
		gbc_panelFlightInformationDepartureAirportField.gridy = 8;
		panelFlightInformationData.add(panelFlightInformationDepartureAirportField, gbc_panelFlightInformationDepartureAirportField);
		GridBagLayout gbl_panelFlightInformationDepartureAirportField = new GridBagLayout();
		gbl_panelFlightInformationDepartureAirportField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDepartureAirportField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDepartureAirportField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDepartureAirportField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDepartureAirportField.setLayout(gbl_panelFlightInformationDepartureAirportField);
		
		fieldFlightInformationDepartureAirport = new JTextField();
		fieldFlightInformationDepartureAirport.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationDepartureAirport.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationDepartureAirport = new GridBagConstraints();
		gbc_fieldFlightInformationDepartureAirport.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationDepartureAirport.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationDepartureAirport.gridx = 0;
		gbc_fieldFlightInformationDepartureAirport.gridy = 0;
		panelFlightInformationDepartureAirportField.add(fieldFlightInformationDepartureAirport, gbc_fieldFlightInformationDepartureAirport);
		fieldFlightInformationDepartureAirport.setColumns(10);
		
		JPanel panelFlightInformationDestinationAirportTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDestinationAirportTitle = new GridBagConstraints();
		gbc_panelFlightInformationDestinationAirportTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDestinationAirportTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDestinationAirportTitle.gridx = 2;
		gbc_panelFlightInformationDestinationAirportTitle.gridy = 8;
		panelFlightInformationData.add(panelFlightInformationDestinationAirportTitle, gbc_panelFlightInformationDestinationAirportTitle);
		GridBagLayout gbl_panelFlightInformationDestinationAirportTitle = new GridBagLayout();
		gbl_panelFlightInformationDestinationAirportTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDestinationAirportTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDestinationAirportTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDestinationAirportTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDestinationAirportTitle.setLayout(gbl_panelFlightInformationDestinationAirportTitle);
		
		JLabel labelFlightInformationDestinationAirportTitle = new JLabel("Destination airport:");
		labelFlightInformationDestinationAirportTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationDestinationAirportTitle = new GridBagConstraints();
		gbc_labelFlightInformationDestinationAirportTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationDestinationAirportTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationDestinationAirportTitle.gridx = 0;
		gbc_labelFlightInformationDestinationAirportTitle.gridy = 0;
		panelFlightInformationDestinationAirportTitle.add(labelFlightInformationDestinationAirportTitle, gbc_labelFlightInformationDestinationAirportTitle);
		
		JPanel panelFlightInformationDestinationAirportField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationDestinationAirportField = new GridBagConstraints();
		gbc_panelFlightInformationDestinationAirportField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationDestinationAirportField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationDestinationAirportField.gridx = 3;
		gbc_panelFlightInformationDestinationAirportField.gridy = 8;
		panelFlightInformationData.add(panelFlightInformationDestinationAirportField, gbc_panelFlightInformationDestinationAirportField);
		GridBagLayout gbl_panelFlightInformationDestinationAirportField = new GridBagLayout();
		gbl_panelFlightInformationDestinationAirportField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationDestinationAirportField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationDestinationAirportField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationDestinationAirportField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationDestinationAirportField.setLayout(gbl_panelFlightInformationDestinationAirportField);
		
		fieldFlightInformationDestinationAirport = new JTextField();
		fieldFlightInformationDestinationAirport.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationDestinationAirport.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationDestinationAirport = new GridBagConstraints();
		gbc_fieldFlightInformationDestinationAirport.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationDestinationAirport.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationDestinationAirport.gridx = 0;
		gbc_fieldFlightInformationDestinationAirport.gridy = 0;
		panelFlightInformationDestinationAirportField.add(fieldFlightInformationDestinationAirport, gbc_fieldFlightInformationDestinationAirport);
		fieldFlightInformationDestinationAirport.setColumns(10);
		
		JPanel panelFlightInformationAlternativeAirport1Title = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAlternativeAirport1Title = new GridBagConstraints();
		gbc_panelFlightInformationAlternativeAirport1Title.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAlternativeAirport1Title.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAlternativeAirport1Title.gridx = 0;
		gbc_panelFlightInformationAlternativeAirport1Title.gridy = 9;
		panelFlightInformationData.add(panelFlightInformationAlternativeAirport1Title, gbc_panelFlightInformationAlternativeAirport1Title);
		GridBagLayout gbl_panelFlightInformationAlternativeAirport1Title = new GridBagLayout();
		gbl_panelFlightInformationAlternativeAirport1Title.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport1Title.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport1Title.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAlternativeAirport1Title.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAlternativeAirport1Title.setLayout(gbl_panelFlightInformationAlternativeAirport1Title);
		
		JLabel labelFlightInformationAlternativeAirport1Title = new JLabel("Alternative airport 1:");
		labelFlightInformationAlternativeAirport1Title.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationAlternativeAirport1Title = new GridBagConstraints();
		gbc_labelFlightInformationAlternativeAirport1Title.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationAlternativeAirport1Title.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationAlternativeAirport1Title.gridx = 0;
		gbc_labelFlightInformationAlternativeAirport1Title.gridy = 0;
		panelFlightInformationAlternativeAirport1Title.add(labelFlightInformationAlternativeAirport1Title, gbc_labelFlightInformationAlternativeAirport1Title);
		
		JPanel panelFlightInformationAlternativeAirport1Field = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAlternativeAirport1Field = new GridBagConstraints();
		gbc_panelFlightInformationAlternativeAirport1Field.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAlternativeAirport1Field.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAlternativeAirport1Field.gridx = 1;
		gbc_panelFlightInformationAlternativeAirport1Field.gridy = 9;
		panelFlightInformationData.add(panelFlightInformationAlternativeAirport1Field, gbc_panelFlightInformationAlternativeAirport1Field);
		GridBagLayout gbl_panelFlightInformationAlternativeAirport1Field = new GridBagLayout();
		gbl_panelFlightInformationAlternativeAirport1Field.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport1Field.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport1Field.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAlternativeAirport1Field.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAlternativeAirport1Field.setLayout(gbl_panelFlightInformationAlternativeAirport1Field);
		
		fieldFlightInformationAlternativeAirport1 = new JTextField();
		fieldFlightInformationAlternativeAirport1.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationAlternativeAirport1.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationAlternativeAirport1 = new GridBagConstraints();
		gbc_fieldFlightInformationAlternativeAirport1.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationAlternativeAirport1.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationAlternativeAirport1.gridx = 0;
		gbc_fieldFlightInformationAlternativeAirport1.gridy = 0;
		panelFlightInformationAlternativeAirport1Field.add(fieldFlightInformationAlternativeAirport1, gbc_fieldFlightInformationAlternativeAirport1);
		fieldFlightInformationAlternativeAirport1.setColumns(10);
		
		JPanel panelFlightInformationAlternativeAirport2Title = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAlternativeAirport2Title = new GridBagConstraints();
		gbc_panelFlightInformationAlternativeAirport2Title.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAlternativeAirport2Title.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAlternativeAirport2Title.gridx = 2;
		gbc_panelFlightInformationAlternativeAirport2Title.gridy = 9;
		panelFlightInformationData.add(panelFlightInformationAlternativeAirport2Title, gbc_panelFlightInformationAlternativeAirport2Title);
		GridBagLayout gbl_panelFlightInformationAlternativeAirport2Title = new GridBagLayout();
		gbl_panelFlightInformationAlternativeAirport2Title.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport2Title.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport2Title.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAlternativeAirport2Title.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAlternativeAirport2Title.setLayout(gbl_panelFlightInformationAlternativeAirport2Title);
		
		JLabel labelFlightInformationAlternativeAirport2Title = new JLabel("Alternative airport 2:");
		labelFlightInformationAlternativeAirport2Title.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationAlternativeAirport2Title = new GridBagConstraints();
		gbc_labelFlightInformationAlternativeAirport2Title.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationAlternativeAirport2Title.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationAlternativeAirport2Title.gridx = 0;
		gbc_labelFlightInformationAlternativeAirport2Title.gridy = 0;
		panelFlightInformationAlternativeAirport2Title.add(labelFlightInformationAlternativeAirport2Title, gbc_labelFlightInformationAlternativeAirport2Title);
		
		JPanel panelFlightInformationAlternativeAirport2Field = new JPanel();
		GridBagConstraints gbc_panelFlightInformationAlternativeAirport2Field = new GridBagConstraints();
		gbc_panelFlightInformationAlternativeAirport2Field.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationAlternativeAirport2Field.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationAlternativeAirport2Field.gridx = 3;
		gbc_panelFlightInformationAlternativeAirport2Field.gridy = 9;
		panelFlightInformationData.add(panelFlightInformationAlternativeAirport2Field, gbc_panelFlightInformationAlternativeAirport2Field);
		GridBagLayout gbl_panelFlightInformationAlternativeAirport2Field = new GridBagLayout();
		gbl_panelFlightInformationAlternativeAirport2Field.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport2Field.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationAlternativeAirport2Field.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationAlternativeAirport2Field.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationAlternativeAirport2Field.setLayout(gbl_panelFlightInformationAlternativeAirport2Field);
		
		fieldFlightInformationAlternativeAirport2 = new JTextField();
		fieldFlightInformationAlternativeAirport2.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationAlternativeAirport2.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationAlternativeAirport2 = new GridBagConstraints();
		gbc_fieldFlightInformationAlternativeAirport2.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationAlternativeAirport2.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationAlternativeAirport2.gridx = 0;
		gbc_fieldFlightInformationAlternativeAirport2.gridy = 0;
		panelFlightInformationAlternativeAirport2Field.add(fieldFlightInformationAlternativeAirport2, gbc_fieldFlightInformationAlternativeAirport2);
		fieldFlightInformationAlternativeAirport2.setColumns(10);
		
		JPanel panelFlightInformationRouteTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationRouteTitle = new GridBagConstraints();
		gbc_panelFlightInformationRouteTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationRouteTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationRouteTitle.gridx = 0;
		gbc_panelFlightInformationRouteTitle.gridy = 10;
		panelFlightInformationData.add(panelFlightInformationRouteTitle, gbc_panelFlightInformationRouteTitle);
		GridBagLayout gbl_panelFlightInformationRouteTitle = new GridBagLayout();
		gbl_panelFlightInformationRouteTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationRouteTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationRouteTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationRouteTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationRouteTitle.setLayout(gbl_panelFlightInformationRouteTitle);
		
		JLabel labelFlightInformationRouteTitle = new JLabel("Route:");
		labelFlightInformationRouteTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationRouteTitle = new GridBagConstraints();
		gbc_labelFlightInformationRouteTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationRouteTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationRouteTitle.gridx = 0;
		gbc_labelFlightInformationRouteTitle.gridy = 0;
		panelFlightInformationRouteTitle.add(labelFlightInformationRouteTitle, gbc_labelFlightInformationRouteTitle);
		
		JPanel panelFlightInformationRouteField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationRouteField = new GridBagConstraints();
		gbc_panelFlightInformationRouteField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationRouteField.gridwidth = 3;
		gbc_panelFlightInformationRouteField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationRouteField.gridx = 1;
		gbc_panelFlightInformationRouteField.gridy = 10;
		panelFlightInformationData.add(panelFlightInformationRouteField, gbc_panelFlightInformationRouteField);
		GridBagLayout gbl_panelFlightInformationRouteField = new GridBagLayout();
		gbl_panelFlightInformationRouteField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationRouteField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationRouteField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationRouteField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationRouteField.setLayout(gbl_panelFlightInformationRouteField);
		
		fieldFlightInformationRoute = new JTextField();
		fieldFlightInformationRoute.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationRoute.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationRoute = new GridBagConstraints();
		gbc_fieldFlightInformationRoute.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationRoute.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationRoute.gridx = 0;
		gbc_fieldFlightInformationRoute.gridy = 0;
		panelFlightInformationRouteField.add(fieldFlightInformationRoute, gbc_fieldFlightInformationRoute);
		fieldFlightInformationRoute.setColumns(10);
		
		JPanel panelFlightInformationRemarksTitle = new JPanel();
		GridBagConstraints gbc_panelFlightInformationRemarksTitle = new GridBagConstraints();
		gbc_panelFlightInformationRemarksTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationRemarksTitle.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationRemarksTitle.gridx = 0;
		gbc_panelFlightInformationRemarksTitle.gridy = 11;
		panelFlightInformationData.add(panelFlightInformationRemarksTitle, gbc_panelFlightInformationRemarksTitle);
		GridBagLayout gbl_panelFlightInformationRemarksTitle = new GridBagLayout();
		gbl_panelFlightInformationRemarksTitle.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationRemarksTitle.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationRemarksTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationRemarksTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationRemarksTitle.setLayout(gbl_panelFlightInformationRemarksTitle);
		
		JLabel labelFlightInformationRemarksTitle = new JLabel("Remarks:");
		labelFlightInformationRemarksTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelFlightInformationRemarksTitle = new GridBagConstraints();
		gbc_labelFlightInformationRemarksTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelFlightInformationRemarksTitle.anchor = GridBagConstraints.WEST;
		gbc_labelFlightInformationRemarksTitle.gridx = 0;
		gbc_labelFlightInformationRemarksTitle.gridy = 0;
		panelFlightInformationRemarksTitle.add(labelFlightInformationRemarksTitle, gbc_labelFlightInformationRemarksTitle);
		
		JPanel panelFlightInformationRemarksField = new JPanel();
		GridBagConstraints gbc_panelFlightInformationRemarksField = new GridBagConstraints();
		gbc_panelFlightInformationRemarksField.gridwidth = 3;
		gbc_panelFlightInformationRemarksField.insets = new Insets(2, 2, 2, 2);
		gbc_panelFlightInformationRemarksField.fill = GridBagConstraints.BOTH;
		gbc_panelFlightInformationRemarksField.gridx = 1;
		gbc_panelFlightInformationRemarksField.gridy = 11;
		panelFlightInformationData.add(panelFlightInformationRemarksField, gbc_panelFlightInformationRemarksField);
		GridBagLayout gbl_panelFlightInformationRemarksField = new GridBagLayout();
		gbl_panelFlightInformationRemarksField.columnWidths = new int[]{0, 0};
		gbl_panelFlightInformationRemarksField.rowHeights = new int[]{0, 0};
		gbl_panelFlightInformationRemarksField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelFlightInformationRemarksField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelFlightInformationRemarksField.setLayout(gbl_panelFlightInformationRemarksField);
		
		fieldFlightInformationRemarks = new JTextField();
		fieldFlightInformationRemarks.setHorizontalAlignment(SwingConstants.CENTER);
		fieldFlightInformationRemarks.setEditable(false);
		GridBagConstraints gbc_fieldFlightInformationRemarks = new GridBagConstraints();
		gbc_fieldFlightInformationRemarks.insets = new Insets(2, 2, 2, 2);
		gbc_fieldFlightInformationRemarks.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldFlightInformationRemarks.gridx = 0;
		gbc_fieldFlightInformationRemarks.gridy = 0;
		panelFlightInformationRemarksField.add(fieldFlightInformationRemarks, gbc_fieldFlightInformationRemarks);
		fieldFlightInformationRemarks.setColumns(10);
		
		JPanel panelAirportInformation = new JPanel();
		GridBagConstraints gbc_panelAirportInformation = new GridBagConstraints();
		gbc_panelAirportInformation.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformation.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformation.gridx = 0;
		gbc_panelAirportInformation.gridy = 2;
		panelInformation.add(panelAirportInformation, gbc_panelAirportInformation);
		GridBagLayout gbl_panelAirportInformation = new GridBagLayout();
		gbl_panelAirportInformation.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformation.rowHeights = new int[]{0, 0, 0};
		gbl_panelAirportInformation.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformation.rowWeights = new double[]{0.0, 0.0, 1.0};
		panelAirportInformation.setLayout(gbl_panelAirportInformation);
		
		JPanel panelAirportInformationTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTitle = new GridBagConstraints();
		gbc_panelAirportInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTitle.gridx = 0;
		gbc_panelAirportInformationTitle.gridy = 0;
		panelAirportInformation.add(panelAirportInformationTitle, gbc_panelAirportInformationTitle);
		GridBagLayout gbl_panelAirportInformationTitle = new GridBagLayout();
		gbl_panelAirportInformationTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTitle.rowWeights = new double[]{0.0, Double.MIN_VALUE};
		panelAirportInformationTitle.setLayout(gbl_panelAirportInformationTitle);
		
		JLabel labelAirportInformationTitle = new JLabel("Airport information");
		labelAirportInformationTitle.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		labelAirportInformationTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationTitle = new GridBagConstraints();
		gbc_labelAirportInformationTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationTitle.fill = GridBagConstraints.HORIZONTAL;
		gbc_labelAirportInformationTitle.gridx = 0;
		gbc_labelAirportInformationTitle.gridy = 0;
		panelAirportInformationTitle.add(labelAirportInformationTitle, gbc_labelAirportInformationTitle);
		
		JSeparator separatorInformation3 = new JSeparator();
		GridBagConstraints gbc_separatorInformation3 = new GridBagConstraints();
		gbc_separatorInformation3.fill = GridBagConstraints.HORIZONTAL;
		gbc_separatorInformation3.insets = new Insets(2, 2, 2, 2);
		gbc_separatorInformation3.gridx = 0;
		gbc_separatorInformation3.gridy = 1;
		panelAirportInformation.add(separatorInformation3, gbc_separatorInformation3);
		
		JPanel panelAirportInformationData = new JPanel();
		GridBagConstraints gbc_panelAirportInformationData = new GridBagConstraints();
		gbc_panelAirportInformationData.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationData.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationData.gridx = 0;
		gbc_panelAirportInformationData.gridy = 2;
		panelAirportInformation.add(panelAirportInformationData, gbc_panelAirportInformationData);
		GridBagLayout gbl_panelAirportInformationData = new GridBagLayout();
		gbl_panelAirportInformationData.columnWidths = new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0};
		gbl_panelAirportInformationData.rowHeights = new int[]{0, 0, 0, 0, 0, 0};
		gbl_panelAirportInformationData.columnWeights = new double[]{0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationData.rowWeights = new double[]{1.0, 1.0, 1.0, 1.0, 1.0, Double.MIN_VALUE};
		panelAirportInformationData.setLayout(gbl_panelAirportInformationData);
		
		JPanel panelAirportInformationICAOTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationICAOTitle = new GridBagConstraints();
		gbc_panelAirportInformationICAOTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationICAOTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationICAOTitle.gridx = 0;
		gbc_panelAirportInformationICAOTitle.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationICAOTitle, gbc_panelAirportInformationICAOTitle);
		GridBagLayout gbl_panelAirportInformationICAOTitle = new GridBagLayout();
		gbl_panelAirportInformationICAOTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationICAOTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationICAOTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationICAOTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationICAOTitle.setLayout(gbl_panelAirportInformationICAOTitle);
		
		JLabel labelAirportInformationICAOTitle = new JLabel("ICAO:");
		labelAirportInformationICAOTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationICAOTitle = new GridBagConstraints();
		gbc_labelAirportInformationICAOTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationICAOTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationICAOTitle.gridx = 0;
		gbc_labelAirportInformationICAOTitle.gridy = 0;
		panelAirportInformationICAOTitle.add(labelAirportInformationICAOTitle, gbc_labelAirportInformationICAOTitle);
		
		JPanel panelAirportInformationICAOField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationICAOField = new GridBagConstraints();
		gbc_panelAirportInformationICAOField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationICAOField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationICAOField.gridx = 1;
		gbc_panelAirportInformationICAOField.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationICAOField, gbc_panelAirportInformationICAOField);
		GridBagLayout gbl_panelAirportInformationICAOField = new GridBagLayout();
		gbl_panelAirportInformationICAOField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationICAOField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationICAOField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationICAOField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationICAOField.setLayout(gbl_panelAirportInformationICAOField);
		
		fieldAirportInformationICAO = new JTextField();
		fieldAirportInformationICAO.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationICAO.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationICAO = new GridBagConstraints();
		gbc_fieldAirportInformationICAO.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationICAO.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationICAO.gridx = 0;
		gbc_fieldAirportInformationICAO.gridy = 0;
		panelAirportInformationICAOField.add(new AlphaContainer(fieldAirportInformationICAO), gbc_fieldAirportInformationICAO);
		fieldAirportInformationICAO.setColumns(10);
		
		JPanel panelAirportInformationActiveRWY1Title = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY1Title = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY1Title.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY1Title.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY1Title.gridx = 2;
		gbc_panelAirportInformationActiveRWY1Title.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY1Title, gbc_panelAirportInformationActiveRWY1Title);
		GridBagLayout gbl_panelAirportInformationActiveRWY1Title = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY1Title.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY1Title.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY1Title.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY1Title.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY1Title.setLayout(gbl_panelAirportInformationActiveRWY1Title);
		
		JLabel labelAirportInformationActiveRWY1Title = new JLabel("Active RWY 1:");
		labelAirportInformationActiveRWY1Title.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationActiveRWY1Title = new GridBagConstraints();
		gbc_labelAirportInformationActiveRWY1Title.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationActiveRWY1Title.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationActiveRWY1Title.gridx = 0;
		gbc_labelAirportInformationActiveRWY1Title.gridy = 0;
		panelAirportInformationActiveRWY1Title.add(labelAirportInformationActiveRWY1Title, gbc_labelAirportInformationActiveRWY1Title);
		
		JPanel panelAirportInformationActiveRWY1Field = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY1Field = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY1Field.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY1Field.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY1Field.gridx = 3;
		gbc_panelAirportInformationActiveRWY1Field.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY1Field, gbc_panelAirportInformationActiveRWY1Field);
		GridBagLayout gbl_panelAirportInformationActiveRWY1Field = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY1Field.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY1Field.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY1Field.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY1Field.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY1Field.setLayout(gbl_panelAirportInformationActiveRWY1Field);
		
		fieldAirportInformationActiveRWY1 = new JTextField();
		fieldAirportInformationActiveRWY1.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationActiveRWY1.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationActiveRWY1 = new GridBagConstraints();
		gbc_fieldAirportInformationActiveRWY1.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationActiveRWY1.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationActiveRWY1.gridx = 0;
		gbc_fieldAirportInformationActiveRWY1.gridy = 0;
		panelAirportInformationActiveRWY1Field.add(new AlphaContainer(fieldAirportInformationActiveRWY1), gbc_fieldAirportInformationActiveRWY1);
		fieldAirportInformationActiveRWY1.setColumns(10);
		
		JPanel panelAirportInformationActiveRWY2Title = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY2Title = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY2Title.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY2Title.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY2Title.gridx = 4;
		gbc_panelAirportInformationActiveRWY2Title.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY2Title, gbc_panelAirportInformationActiveRWY2Title);
		GridBagLayout gbl_panelAirportInformationActiveRWY2Title = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY2Title.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY2Title.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY2Title.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY2Title.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY2Title.setLayout(gbl_panelAirportInformationActiveRWY2Title);
		
		JLabel labelAirportInformationActiveRWY2Title = new JLabel("Active RWY 2:");
		labelAirportInformationActiveRWY2Title.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationActiveRWY2Title = new GridBagConstraints();
		gbc_labelAirportInformationActiveRWY2Title.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationActiveRWY2Title.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationActiveRWY2Title.gridx = 0;
		gbc_labelAirportInformationActiveRWY2Title.gridy = 0;
		panelAirportInformationActiveRWY2Title.add(labelAirportInformationActiveRWY2Title, gbc_labelAirportInformationActiveRWY2Title);
		
		JPanel panelAirportInformationActiveRWY2Field = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY2Field = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY2Field.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY2Field.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY2Field.gridx = 5;
		gbc_panelAirportInformationActiveRWY2Field.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY2Field, gbc_panelAirportInformationActiveRWY2Field);
		GridBagLayout gbl_panelAirportInformationActiveRWY2Field = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY2Field.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY2Field.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY2Field.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY2Field.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY2Field.setLayout(gbl_panelAirportInformationActiveRWY2Field);
		
		fieldAirportInformationActiveRWY2 = new JTextField();
		fieldAirportInformationActiveRWY2.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationActiveRWY2.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationActiveRWY2 = new GridBagConstraints();
		gbc_fieldAirportInformationActiveRWY2.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationActiveRWY2.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationActiveRWY2.gridx = 0;
		gbc_fieldAirportInformationActiveRWY2.gridy = 0;
		panelAirportInformationActiveRWY2Field.add(new AlphaContainer(fieldAirportInformationActiveRWY2), gbc_fieldAirportInformationActiveRWY2);
		fieldAirportInformationActiveRWY2.setColumns(10);
		
		JPanel panelAirportInformationActiveRWY3Title = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY3Title = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY3Title.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY3Title.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY3Title.gridx = 6;
		gbc_panelAirportInformationActiveRWY3Title.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY3Title, gbc_panelAirportInformationActiveRWY3Title);
		GridBagLayout gbl_panelAirportInformationActiveRWY3Title = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY3Title.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY3Title.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY3Title.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY3Title.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY3Title.setLayout(gbl_panelAirportInformationActiveRWY3Title);
		
		JLabel labelAirportInformationActiveRWY3Title = new JLabel("Active RWY 3:");
		labelAirportInformationActiveRWY3Title.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationActiveRWY3Title = new GridBagConstraints();
		gbc_labelAirportInformationActiveRWY3Title.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationActiveRWY3Title.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationActiveRWY3Title.gridx = 0;
		gbc_labelAirportInformationActiveRWY3Title.gridy = 0;
		panelAirportInformationActiveRWY3Title.add(labelAirportInformationActiveRWY3Title, gbc_labelAirportInformationActiveRWY3Title);
		
		JPanel panelAirportInformationActiveRWY3Field = new JPanel();
		GridBagConstraints gbc_panelAirportInformationActiveRWY3Field = new GridBagConstraints();
		gbc_panelAirportInformationActiveRWY3Field.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationActiveRWY3Field.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationActiveRWY3Field.gridx = 7;
		gbc_panelAirportInformationActiveRWY3Field.gridy = 0;
		panelAirportInformationData.add(panelAirportInformationActiveRWY3Field, gbc_panelAirportInformationActiveRWY3Field);
		GridBagLayout gbl_panelAirportInformationActiveRWY3Field = new GridBagLayout();
		gbl_panelAirportInformationActiveRWY3Field.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY3Field.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationActiveRWY3Field.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationActiveRWY3Field.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationActiveRWY3Field.setLayout(gbl_panelAirportInformationActiveRWY3Field);
		
		fieldAirportInformationActiveRWY3 = new JTextField();
		fieldAirportInformationActiveRWY3.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationActiveRWY3.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationActiveRWY3 = new GridBagConstraints();
		gbc_fieldAirportInformationActiveRWY3.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationActiveRWY3.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationActiveRWY3.gridx = 0;
		gbc_fieldAirportInformationActiveRWY3.gridy = 0;
		panelAirportInformationActiveRWY3Field.add(new AlphaContainer(fieldAirportInformationActiveRWY3), gbc_fieldAirportInformationActiveRWY3);
		fieldAirportInformationActiveRWY3.setColumns(10);
		
		JPanel panelAirportInformationTransitionLevelTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTransitionLevelTitle = new GridBagConstraints();
		gbc_panelAirportInformationTransitionLevelTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTransitionLevelTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTransitionLevelTitle.gridx = 0;
		gbc_panelAirportInformationTransitionLevelTitle.gridy = 1;
		panelAirportInformationData.add(panelAirportInformationTransitionLevelTitle, gbc_panelAirportInformationTransitionLevelTitle);
		GridBagLayout gbl_panelAirportInformationTransitionLevelTitle = new GridBagLayout();
		gbl_panelAirportInformationTransitionLevelTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTransitionLevelTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTransitionLevelTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTransitionLevelTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTransitionLevelTitle.setLayout(gbl_panelAirportInformationTransitionLevelTitle);
		
		JLabel labelAirportInformationTransitionLevelTitle = new JLabel("Transition level:");
		labelAirportInformationTransitionLevelTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationTransitionLevelTitle = new GridBagConstraints();
		gbc_labelAirportInformationTransitionLevelTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationTransitionLevelTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationTransitionLevelTitle.gridx = 0;
		gbc_labelAirportInformationTransitionLevelTitle.gridy = 0;
		panelAirportInformationTransitionLevelTitle.add(labelAirportInformationTransitionLevelTitle, gbc_labelAirportInformationTransitionLevelTitle);
		
		JPanel panelAirportInformationTransitionLevelField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTransitionLevelField = new GridBagConstraints();
		gbc_panelAirportInformationTransitionLevelField.gridwidth = 3;
		gbc_panelAirportInformationTransitionLevelField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTransitionLevelField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTransitionLevelField.gridx = 1;
		gbc_panelAirportInformationTransitionLevelField.gridy = 1;
		panelAirportInformationData.add(panelAirportInformationTransitionLevelField, gbc_panelAirportInformationTransitionLevelField);
		GridBagLayout gbl_panelAirportInformationTransitionLevelField = new GridBagLayout();
		gbl_panelAirportInformationTransitionLevelField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTransitionLevelField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTransitionLevelField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTransitionLevelField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTransitionLevelField.setLayout(gbl_panelAirportInformationTransitionLevelField);
		
		fieldAirportInformationTransitionLevel = new JTextField();
		fieldAirportInformationTransitionLevel.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationTransitionLevel.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationTransitionLevel = new GridBagConstraints();
		gbc_fieldAirportInformationTransitionLevel.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationTransitionLevel.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationTransitionLevel.gridx = 0;
		gbc_fieldAirportInformationTransitionLevel.gridy = 0;
		panelAirportInformationTransitionLevelField.add(new AlphaContainer(fieldAirportInformationTransitionLevel), gbc_fieldAirportInformationTransitionLevel);
		fieldAirportInformationTransitionLevel.setColumns(10);
		
		JPanel panelAirportInformationTransitionAltitudeTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTransitionAltitudeTitle = new GridBagConstraints();
		gbc_panelAirportInformationTransitionAltitudeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTransitionAltitudeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTransitionAltitudeTitle.gridx = 4;
		gbc_panelAirportInformationTransitionAltitudeTitle.gridy = 1;
		panelAirportInformationData.add(panelAirportInformationTransitionAltitudeTitle, gbc_panelAirportInformationTransitionAltitudeTitle);
		GridBagLayout gbl_panelAirportInformationTransitionAltitudeTitle = new GridBagLayout();
		gbl_panelAirportInformationTransitionAltitudeTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTransitionAltitudeTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTransitionAltitudeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTransitionAltitudeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTransitionAltitudeTitle.setLayout(gbl_panelAirportInformationTransitionAltitudeTitle);
		
		JLabel labelAirportInformationTransitionAltitudeTitle = new JLabel("Transition altitude:");
		labelAirportInformationTransitionAltitudeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationTransitionAltitudeTitle = new GridBagConstraints();
		gbc_labelAirportInformationTransitionAltitudeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationTransitionAltitudeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationTransitionAltitudeTitle.gridx = 0;
		gbc_labelAirportInformationTransitionAltitudeTitle.gridy = 0;
		panelAirportInformationTransitionAltitudeTitle.add(labelAirportInformationTransitionAltitudeTitle, gbc_labelAirportInformationTransitionAltitudeTitle);
		
		JPanel panelAirportInformationTransitionAltitudeField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTransitionAltitudeField = new GridBagConstraints();
		gbc_panelAirportInformationTransitionAltitudeField.gridwidth = 3;
		gbc_panelAirportInformationTransitionAltitudeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTransitionAltitudeField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTransitionAltitudeField.gridx = 5;
		gbc_panelAirportInformationTransitionAltitudeField.gridy = 1;
		panelAirportInformationData.add(panelAirportInformationTransitionAltitudeField, gbc_panelAirportInformationTransitionAltitudeField);
		GridBagLayout gbl_panelAirportInformationTransitionAltitudeField = new GridBagLayout();
		gbl_panelAirportInformationTransitionAltitudeField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTransitionAltitudeField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTransitionAltitudeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTransitionAltitudeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTransitionAltitudeField.setLayout(gbl_panelAirportInformationTransitionAltitudeField);
		
		fieldAirportInformationTransitionAltitude = new JTextField();
		fieldAirportInformationTransitionAltitude.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationTransitionAltitude.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationTransitionAltitude = new GridBagConstraints();
		gbc_fieldAirportInformationTransitionAltitude.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationTransitionAltitude.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationTransitionAltitude.gridx = 0;
		gbc_fieldAirportInformationTransitionAltitude.gridy = 0;
		panelAirportInformationTransitionAltitudeField.add(new AlphaContainer(fieldAirportInformationTransitionAltitude), gbc_fieldAirportInformationTransitionAltitude);
		fieldAirportInformationTransitionAltitude.setColumns(10);
		
		JPanel panelAirportInformationSquawkStartTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkStartTitle = new GridBagConstraints();
		gbc_panelAirportInformationSquawkStartTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkStartTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkStartTitle.gridx = 0;
		gbc_panelAirportInformationSquawkStartTitle.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkStartTitle, gbc_panelAirportInformationSquawkStartTitle);
		GridBagLayout gbl_panelAirportInformationSquawkStartTitle = new GridBagLayout();
		gbl_panelAirportInformationSquawkStartTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkStartTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkStartTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkStartTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkStartTitle.setLayout(gbl_panelAirportInformationSquawkStartTitle);
		
		JLabel labelAirportInformationSquawkStartTitle = new JLabel("Squawk (start):");
		labelAirportInformationSquawkStartTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationSquawkStartTitle = new GridBagConstraints();
		gbc_labelAirportInformationSquawkStartTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationSquawkStartTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationSquawkStartTitle.gridx = 0;
		gbc_labelAirportInformationSquawkStartTitle.gridy = 0;
		panelAirportInformationSquawkStartTitle.add(labelAirportInformationSquawkStartTitle, gbc_labelAirportInformationSquawkStartTitle);
		
		JPanel panelAirportInformationSquawkStartField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkStartField = new GridBagConstraints();
		gbc_panelAirportInformationSquawkStartField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkStartField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkStartField.gridx = 1;
		gbc_panelAirportInformationSquawkStartField.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkStartField, gbc_panelAirportInformationSquawkStartField);
		GridBagLayout gbl_panelAirportInformationSquawkStartField = new GridBagLayout();
		gbl_panelAirportInformationSquawkStartField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkStartField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkStartField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkStartField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkStartField.setLayout(gbl_panelAirportInformationSquawkStartField);
		
		fieldAirportInformationSquawkStart = new JTextField();
		fieldAirportInformationSquawkStart.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationSquawkStart.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationSquawkStart = new GridBagConstraints();
		gbc_fieldAirportInformationSquawkStart.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationSquawkStart.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationSquawkStart.gridx = 0;
		gbc_fieldAirportInformationSquawkStart.gridy = 0;
		panelAirportInformationSquawkStartField.add(new AlphaContainer(fieldAirportInformationSquawkStart), gbc_fieldAirportInformationSquawkStart);
		fieldAirportInformationSquawkStart.setColumns(10);
		
		JPanel panelAirportInformationSquawkEndTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkEndTitle = new GridBagConstraints();
		gbc_panelAirportInformationSquawkEndTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkEndTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkEndTitle.gridx = 2;
		gbc_panelAirportInformationSquawkEndTitle.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkEndTitle, gbc_panelAirportInformationSquawkEndTitle);
		GridBagLayout gbl_panelAirportInformationSquawkEndTitle = new GridBagLayout();
		gbl_panelAirportInformationSquawkEndTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkEndTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkEndTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkEndTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkEndTitle.setLayout(gbl_panelAirportInformationSquawkEndTitle);
		
		JLabel labelAirportInformationSquawkEndTitle = new JLabel("Squawk (end):");
		labelAirportInformationSquawkEndTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationSquawkEndTitle = new GridBagConstraints();
		gbc_labelAirportInformationSquawkEndTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationSquawkEndTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationSquawkEndTitle.gridx = 0;
		gbc_labelAirportInformationSquawkEndTitle.gridy = 0;
		panelAirportInformationSquawkEndTitle.add(labelAirportInformationSquawkEndTitle, gbc_labelAirportInformationSquawkEndTitle);
		
		JPanel panelAirportInformationSquawkEndField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkEndField = new GridBagConstraints();
		gbc_panelAirportInformationSquawkEndField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkEndField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkEndField.gridx = 3;
		gbc_panelAirportInformationSquawkEndField.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkEndField, gbc_panelAirportInformationSquawkEndField);
		GridBagLayout gbl_panelAirportInformationSquawkEndField = new GridBagLayout();
		gbl_panelAirportInformationSquawkEndField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkEndField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkEndField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkEndField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkEndField.setLayout(gbl_panelAirportInformationSquawkEndField);
		
		fieldAirportInformationSquawkEnd = new JTextField();
		fieldAirportInformationSquawkEnd.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationSquawkEnd.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationSquawkEnd = new GridBagConstraints();
		gbc_fieldAirportInformationSquawkEnd.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationSquawkEnd.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationSquawkEnd.gridx = 0;
		gbc_fieldAirportInformationSquawkEnd.gridy = 0;
		panelAirportInformationSquawkEndField.add(new AlphaContainer(fieldAirportInformationSquawkEnd), gbc_fieldAirportInformationSquawkEnd);
		fieldAirportInformationSquawkEnd.setColumns(10);
		
		JPanel panelAirportInformationSquawkFreeTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkFreeTitle = new GridBagConstraints();
		gbc_panelAirportInformationSquawkFreeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkFreeTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkFreeTitle.gridx = 4;
		gbc_panelAirportInformationSquawkFreeTitle.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkFreeTitle, gbc_panelAirportInformationSquawkFreeTitle);
		GridBagLayout gbl_panelAirportInformationSquawkFreeTitle = new GridBagLayout();
		gbl_panelAirportInformationSquawkFreeTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkFreeTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkFreeTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkFreeTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkFreeTitle.setLayout(gbl_panelAirportInformationSquawkFreeTitle);
		
		JLabel labelAirportInformationSquawkFreeTitle = new JLabel("Squawk (free):");
		labelAirportInformationSquawkFreeTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationSquawkFreeTitle = new GridBagConstraints();
		gbc_labelAirportInformationSquawkFreeTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationSquawkFreeTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationSquawkFreeTitle.gridx = 0;
		gbc_labelAirportInformationSquawkFreeTitle.gridy = 0;
		panelAirportInformationSquawkFreeTitle.add(labelAirportInformationSquawkFreeTitle, gbc_labelAirportInformationSquawkFreeTitle);
		
		JPanel panelAirportInformationSquawkFreeField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationSquawkFreeField = new GridBagConstraints();
		gbc_panelAirportInformationSquawkFreeField.gridwidth = 3;
		gbc_panelAirportInformationSquawkFreeField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationSquawkFreeField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationSquawkFreeField.gridx = 5;
		gbc_panelAirportInformationSquawkFreeField.gridy = 2;
		panelAirportInformationData.add(panelAirportInformationSquawkFreeField, gbc_panelAirportInformationSquawkFreeField);
		GridBagLayout gbl_panelAirportInformationSquawkFreeField = new GridBagLayout();
		gbl_panelAirportInformationSquawkFreeField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationSquawkFreeField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationSquawkFreeField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationSquawkFreeField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationSquawkFreeField.setLayout(gbl_panelAirportInformationSquawkFreeField);
		
		fieldAirportInformationSquawkFree = new JTextField();
		fieldAirportInformationSquawkFree.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationSquawkFree.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationSquawkFree = new GridBagConstraints();
		gbc_fieldAirportInformationSquawkFree.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationSquawkFree.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationSquawkFree.gridx = 0;
		gbc_fieldAirportInformationSquawkFree.gridy = 0;
		panelAirportInformationSquawkFreeField.add(fieldAirportInformationSquawkFree, gbc_fieldAirportInformationSquawkFree);
		fieldAirportInformationSquawkFree.setColumns(10);
		
		JPanel panelAirportInformationDELFrequencyTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationDELFrequencyTitle = new GridBagConstraints();
		gbc_panelAirportInformationDELFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationDELFrequencyTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationDELFrequencyTitle.gridx = 0;
		gbc_panelAirportInformationDELFrequencyTitle.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationDELFrequencyTitle, gbc_panelAirportInformationDELFrequencyTitle);
		GridBagLayout gbl_panelAirportInformationDELFrequencyTitle = new GridBagLayout();
		gbl_panelAirportInformationDELFrequencyTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationDELFrequencyTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationDELFrequencyTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationDELFrequencyTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationDELFrequencyTitle.setLayout(gbl_panelAirportInformationDELFrequencyTitle);
		
		JLabel labelAirportInformationDELFrequencyTitle = new JLabel("DEL frequency:");
		labelAirportInformationDELFrequencyTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationDELFrequencyTitle = new GridBagConstraints();
		gbc_labelAirportInformationDELFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationDELFrequencyTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationDELFrequencyTitle.gridx = 0;
		gbc_labelAirportInformationDELFrequencyTitle.gridy = 0;
		panelAirportInformationDELFrequencyTitle.add(labelAirportInformationDELFrequencyTitle, gbc_labelAirportInformationDELFrequencyTitle);
		
		JPanel panelAirportInformationDELFrequencyField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationDELFrequencyField = new GridBagConstraints();
		gbc_panelAirportInformationDELFrequencyField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationDELFrequencyField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationDELFrequencyField.gridx = 1;
		gbc_panelAirportInformationDELFrequencyField.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationDELFrequencyField, gbc_panelAirportInformationDELFrequencyField);
		GridBagLayout gbl_panelAirportInformationDELFrequencyField = new GridBagLayout();
		gbl_panelAirportInformationDELFrequencyField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationDELFrequencyField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationDELFrequencyField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationDELFrequencyField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationDELFrequencyField.setLayout(gbl_panelAirportInformationDELFrequencyField);
		
		fieldAirportInformationDELFrequency = new JTextField();
		fieldAirportInformationDELFrequency.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationDELFrequency.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationDELFrequency = new GridBagConstraints();
		gbc_fieldAirportInformationDELFrequency.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationDELFrequency.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationDELFrequency.gridx = 0;
		gbc_fieldAirportInformationDELFrequency.gridy = 0;
		panelAirportInformationDELFrequencyField.add(new AlphaContainer(fieldAirportInformationDELFrequency), gbc_fieldAirportInformationDELFrequency);
		fieldAirportInformationDELFrequency.setColumns(10);
		
		JPanel panelAirportInformationGNDFrequencyTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationGNDFrequencyTitle = new GridBagConstraints();
		gbc_panelAirportInformationGNDFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationGNDFrequencyTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationGNDFrequencyTitle.gridx = 2;
		gbc_panelAirportInformationGNDFrequencyTitle.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationGNDFrequencyTitle, gbc_panelAirportInformationGNDFrequencyTitle);
		GridBagLayout gbl_panelAirportInformationGNDFrequencyTitle = new GridBagLayout();
		gbl_panelAirportInformationGNDFrequencyTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationGNDFrequencyTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationGNDFrequencyTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationGNDFrequencyTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationGNDFrequencyTitle.setLayout(gbl_panelAirportInformationGNDFrequencyTitle);
		
		JLabel labelAirportInformationGNDFrequencyTitle = new JLabel("GND frequency:");
		labelAirportInformationGNDFrequencyTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationGNDFrequencyTitle = new GridBagConstraints();
		gbc_labelAirportInformationGNDFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationGNDFrequencyTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationGNDFrequencyTitle.gridx = 0;
		gbc_labelAirportInformationGNDFrequencyTitle.gridy = 0;
		panelAirportInformationGNDFrequencyTitle.add(labelAirportInformationGNDFrequencyTitle, gbc_labelAirportInformationGNDFrequencyTitle);
		
		JPanel panelAirportInformationGNDFrequencyField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationGNDFrequencyField = new GridBagConstraints();
		gbc_panelAirportInformationGNDFrequencyField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationGNDFrequencyField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationGNDFrequencyField.gridx = 3;
		gbc_panelAirportInformationGNDFrequencyField.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationGNDFrequencyField, gbc_panelAirportInformationGNDFrequencyField);
		GridBagLayout gbl_panelAirportInformationGNDFrequencyField = new GridBagLayout();
		gbl_panelAirportInformationGNDFrequencyField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationGNDFrequencyField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationGNDFrequencyField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationGNDFrequencyField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationGNDFrequencyField.setLayout(gbl_panelAirportInformationGNDFrequencyField);
		
		fieldAirportInformationGNDFrequency = new JTextField();
		fieldAirportInformationGNDFrequency.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationGNDFrequency.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationGNDFrequency = new GridBagConstraints();
		gbc_fieldAirportInformationGNDFrequency.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationGNDFrequency.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationGNDFrequency.gridx = 0;
		gbc_fieldAirportInformationGNDFrequency.gridy = 0;
		panelAirportInformationGNDFrequencyField.add(new AlphaContainer(fieldAirportInformationGNDFrequency), gbc_fieldAirportInformationGNDFrequency);
		fieldAirportInformationGNDFrequency.setColumns(10);
		
		JPanel panelAirportInformationTWRFrequencyTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTWRFrequencyTitle = new GridBagConstraints();
		gbc_panelAirportInformationTWRFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTWRFrequencyTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTWRFrequencyTitle.gridx = 4;
		gbc_panelAirportInformationTWRFrequencyTitle.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationTWRFrequencyTitle, gbc_panelAirportInformationTWRFrequencyTitle);
		GridBagLayout gbl_panelAirportInformationTWRFrequencyTitle = new GridBagLayout();
		gbl_panelAirportInformationTWRFrequencyTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTWRFrequencyTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTWRFrequencyTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTWRFrequencyTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTWRFrequencyTitle.setLayout(gbl_panelAirportInformationTWRFrequencyTitle);
		
		JLabel labelAirportInformationTWRFrequencyTitle = new JLabel("TWR frequency:");
		labelAirportInformationTWRFrequencyTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationTWRFrequencyTitle = new GridBagConstraints();
		gbc_labelAirportInformationTWRFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationTWRFrequencyTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationTWRFrequencyTitle.gridx = 0;
		gbc_labelAirportInformationTWRFrequencyTitle.gridy = 0;
		panelAirportInformationTWRFrequencyTitle.add(labelAirportInformationTWRFrequencyTitle, gbc_labelAirportInformationTWRFrequencyTitle);
		
		JPanel panelAirportInformationTWRFrequencyField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationTWRFrequencyField = new GridBagConstraints();
		gbc_panelAirportInformationTWRFrequencyField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationTWRFrequencyField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationTWRFrequencyField.gridx = 5;
		gbc_panelAirportInformationTWRFrequencyField.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationTWRFrequencyField, gbc_panelAirportInformationTWRFrequencyField);
		GridBagLayout gbl_panelAirportInformationTWRFrequencyField = new GridBagLayout();
		gbl_panelAirportInformationTWRFrequencyField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationTWRFrequencyField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationTWRFrequencyField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationTWRFrequencyField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationTWRFrequencyField.setLayout(gbl_panelAirportInformationTWRFrequencyField);
		
		fieldAirportInformationTWRFrequency = new JTextField();
		fieldAirportInformationTWRFrequency.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationTWRFrequency.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationTWRFrequency = new GridBagConstraints();
		gbc_fieldAirportInformationTWRFrequency.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationTWRFrequency.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationTWRFrequency.gridx = 0;
		gbc_fieldAirportInformationTWRFrequency.gridy = 0;
		panelAirportInformationTWRFrequencyField.add(new AlphaContainer(fieldAirportInformationTWRFrequency), gbc_fieldAirportInformationTWRFrequency);
		fieldAirportInformationTWRFrequency.setColumns(10);
		
		JPanel panelAirportInformationAPPFrequencyTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationAPPFrequencyTitle = new GridBagConstraints();
		gbc_panelAirportInformationAPPFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationAPPFrequencyTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationAPPFrequencyTitle.gridx = 6;
		gbc_panelAirportInformationAPPFrequencyTitle.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationAPPFrequencyTitle, gbc_panelAirportInformationAPPFrequencyTitle);
		GridBagLayout gbl_panelAirportInformationAPPFrequencyTitle = new GridBagLayout();
		gbl_panelAirportInformationAPPFrequencyTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationAPPFrequencyTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationAPPFrequencyTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationAPPFrequencyTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationAPPFrequencyTitle.setLayout(gbl_panelAirportInformationAPPFrequencyTitle);
		
		JLabel labelAirportInformationAPPFrequencyTitle = new JLabel("APP frequency:");
		labelAirportInformationAPPFrequencyTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationAPPFrequencyTitle = new GridBagConstraints();
		gbc_labelAirportInformationAPPFrequencyTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationAPPFrequencyTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationAPPFrequencyTitle.gridx = 0;
		gbc_labelAirportInformationAPPFrequencyTitle.gridy = 0;
		panelAirportInformationAPPFrequencyTitle.add(labelAirportInformationAPPFrequencyTitle, gbc_labelAirportInformationAPPFrequencyTitle);
		
		JPanel panelAirportInformationAPPFrequencyField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationAPPFrequencyField = new GridBagConstraints();
		gbc_panelAirportInformationAPPFrequencyField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationAPPFrequencyField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationAPPFrequencyField.gridx = 7;
		gbc_panelAirportInformationAPPFrequencyField.gridy = 3;
		panelAirportInformationData.add(panelAirportInformationAPPFrequencyField, gbc_panelAirportInformationAPPFrequencyField);
		GridBagLayout gbl_panelAirportInformationAPPFrequencyField = new GridBagLayout();
		gbl_panelAirportInformationAPPFrequencyField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationAPPFrequencyField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationAPPFrequencyField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationAPPFrequencyField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationAPPFrequencyField.setLayout(gbl_panelAirportInformationAPPFrequencyField);
		
		fieldAirportInformationAPPFrequency = new JTextField();
		fieldAirportInformationAPPFrequency.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationAPPFrequency.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationAPPFrequency = new GridBagConstraints();
		gbc_fieldAirportInformationAPPFrequency.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationAPPFrequency.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationAPPFrequency.gridx = 0;
		gbc_fieldAirportInformationAPPFrequency.gridy = 0;
		panelAirportInformationAPPFrequencyField.add(new AlphaContainer(fieldAirportInformationAPPFrequency), gbc_fieldAirportInformationAPPFrequency);
		fieldAirportInformationAPPFrequency.setColumns(10);
		
		JPanel panelAirportInformationMETARTitle = new JPanel();
		GridBagConstraints gbc_panelAirportInformationMETARTitle = new GridBagConstraints();
		gbc_panelAirportInformationMETARTitle.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationMETARTitle.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationMETARTitle.gridx = 0;
		gbc_panelAirportInformationMETARTitle.gridy = 4;
		panelAirportInformationData.add(panelAirportInformationMETARTitle, gbc_panelAirportInformationMETARTitle);
		GridBagLayout gbl_panelAirportInformationMETARTitle = new GridBagLayout();
		gbl_panelAirportInformationMETARTitle.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationMETARTitle.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationMETARTitle.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationMETARTitle.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationMETARTitle.setLayout(gbl_panelAirportInformationMETARTitle);
		
		JLabel labelAirportInformationMETARTitle = new JLabel("METAR:");
		labelAirportInformationMETARTitle.setHorizontalAlignment(SwingConstants.CENTER);
		GridBagConstraints gbc_labelAirportInformationMETARTitle = new GridBagConstraints();
		gbc_labelAirportInformationMETARTitle.insets = new Insets(2, 2, 2, 2);
		gbc_labelAirportInformationMETARTitle.anchor = GridBagConstraints.WEST;
		gbc_labelAirportInformationMETARTitle.gridx = 0;
		gbc_labelAirportInformationMETARTitle.gridy = 0;
		panelAirportInformationMETARTitle.add(labelAirportInformationMETARTitle, gbc_labelAirportInformationMETARTitle);
		
		JPanel panelAirportInformationMETARField = new JPanel();
		GridBagConstraints gbc_panelAirportInformationMETARField = new GridBagConstraints();
		gbc_panelAirportInformationMETARField.insets = new Insets(2, 2, 2, 2);
		gbc_panelAirportInformationMETARField.gridwidth = 7;
		gbc_panelAirportInformationMETARField.fill = GridBagConstraints.BOTH;
		gbc_panelAirportInformationMETARField.gridx = 1;
		gbc_panelAirportInformationMETARField.gridy = 4;
		panelAirportInformationData.add(panelAirportInformationMETARField, gbc_panelAirportInformationMETARField);
		GridBagLayout gbl_panelAirportInformationMETARField = new GridBagLayout();
		gbl_panelAirportInformationMETARField.columnWidths = new int[]{0, 0};
		gbl_panelAirportInformationMETARField.rowHeights = new int[]{0, 0};
		gbl_panelAirportInformationMETARField.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_panelAirportInformationMETARField.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		panelAirportInformationMETARField.setLayout(gbl_panelAirportInformationMETARField);
		
		fieldAirportInformationMETAR = new JTextField();
		fieldAirportInformationMETAR.setHorizontalAlignment(SwingConstants.CENTER);
		fieldAirportInformationMETAR.setEditable(false);
		GridBagConstraints gbc_fieldAirportInformationMETAR = new GridBagConstraints();
		gbc_fieldAirportInformationMETAR.insets = new Insets(2, 2, 2, 2);
		gbc_fieldAirportInformationMETAR.fill = GridBagConstraints.HORIZONTAL;
		gbc_fieldAirportInformationMETAR.gridx = 0;
		gbc_fieldAirportInformationMETAR.gridy = 0;
		panelAirportInformationMETARField.add(new AlphaContainer(fieldAirportInformationMETAR), gbc_fieldAirportInformationMETAR);
		fieldAirportInformationMETAR.setColumns(10);
		
		this.informationFields.put("Date", fieldGlobalInformationDate);
		this.informationFields.put("Time", fieldGlobalInformationTime);
		
		this.informationFields.put("Callsign", fieldFlightInformationCallsign);
		this.informationFields.put("VID", fieldFlightInformationVID);
		this.informationFields.put("Altitude (FP)", fieldFlightInformationAltitudeFP);
		this.informationFields.put("Altitude (current)", fieldFlightInformationAltitideCurrent);
		this.informationFields.put("Ground speed (FP)", fieldFlightInformationGroundSpeedFP);
		this.informationFields.put("Squawk (ATC)", fieldFlightInformationSquawkATC);
		this.informationFields.put("Ground speed (current)", fieldFlightInformationGroundSpeedCurrent);
		this.informationFields.put("Squawk (current)", fieldFlightInformationSquawkCurrent);
		this.informationFields.put("Flight rule", fieldFlightInformationFlightRule);
		this.informationFields.put("Exit scheme", fieldFlightInformationExitScheme);
		this.informationFields.put("Information route", fieldFlightInformationRoute);
		this.informationFields.put("Departure airport", fieldFlightInformationDepartureAirport);
		this.informationFields.put("Alternative airport 1", fieldFlightInformationAlternativeAirport1);
		this.informationFields.put("Destination airport", fieldFlightInformationDestinationAirport);
		this.informationFields.put("Alternative airport 2", fieldFlightInformationAlternativeAirport2);
		this.informationFields.put("Departure time (FP)", fieldFlightInformationDepartureTimeFP);
		this.informationFields.put("Estimated enroute time", fieldFlightInformationEET);
		this.informationFields.put("Departure time (current)", fieldFlightInformationDepartureTimeCurrent);
		this.informationFields.put("Fuel on board", fieldFlightInformationFOB);
		this.informationFields.put("Aircraft type", fieldFlightInformationAircraftType);
		this.informationFields.put("Flight type", fieldFlightInformationFlightType);
		this.informationFields.put("Remarks", fieldFlightInformationRemarks);
		
		this.informationFields.put("ICAO", fieldAirportInformationICAO);
		this.informationFields.put("Transition level", fieldAirportInformationTransitionLevel);
		this.informationFields.put("DEL frequency", fieldAirportInformationDELFrequency);
		this.informationFields.put("Active RWY 1", fieldAirportInformationActiveRWY1);
		this.informationFields.put("Transition altitude", fieldAirportInformationTransitionAltitude);
		this.informationFields.put("GND frequency", fieldAirportInformationGNDFrequency);
		this.informationFields.put("Active RWY 2", fieldAirportInformationActiveRWY2);
		this.informationFields.put("TWR frequency", fieldAirportInformationTWRFrequency);
		this.informationFields.put("APP frequency", fieldAirportInformationAPPFrequency);
		this.informationFields.put("Active RWY 3", fieldAirportInformationActiveRWY3);
		this.informationFields.put("METAR", fieldAirportInformationMETAR);
		this.informationFields.put("Squawk (start)", fieldAirportInformationSquawkStart);
		this.informationFields.put("Squawk (end)", fieldAirportInformationSquawkEnd);
		this.informationFields.put("Squawk (free)", fieldAirportInformationSquawkFree);
		
		for(String textFieldName : informationFields.keySet()) {
			JTextField textField = informationFields.get(textFieldName);
			textField.setName(textFieldName);
		}
		
		this.fieldAirportInformationICAO.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationICAO.getName());
		this.fieldAirportInformationICAO.addMouseListener(listener);
		
		this.fieldAirportInformationActiveRWY1.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationActiveRWY1.getName());
		this.fieldAirportInformationActiveRWY1.addMouseListener(listener);
		
		this.fieldAirportInformationActiveRWY2.setBackground(AtcGUIState.UNVERIFIABLE.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationActiveRWY2.getName());
		this.fieldAirportInformationActiveRWY2.addMouseListener(listener);
		
		this.fieldAirportInformationActiveRWY3.setBackground(AtcGUIState.UNVERIFIABLE.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationActiveRWY3.getName());
		this.fieldAirportInformationActiveRWY3.addMouseListener(listener);
		
		this.fieldAirportInformationTransitionLevel.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationTransitionLevel.getName());
		this.fieldAirportInformationTransitionLevel.addMouseListener(listener);
		
		this.fieldAirportInformationTransitionAltitude.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationTransitionAltitude.getName());
		this.fieldAirportInformationTransitionAltitude.addMouseListener(listener);
		
		this.fieldAirportInformationSquawkStart.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationSquawkStart.getName());
		this.fieldAirportInformationSquawkStart.addMouseListener(listener);
		
		this.fieldAirportInformationSquawkEnd.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationSquawkEnd.getName());
		this.fieldAirportInformationSquawkEnd.addMouseListener(listener);
		
		this.fieldAirportInformationDELFrequency.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationDELFrequency.getName());
		this.fieldAirportInformationDELFrequency.addMouseListener(listener);
		
		this.fieldAirportInformationGNDFrequency.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationGNDFrequency.getName());
		this.fieldAirportInformationGNDFrequency.addMouseListener(listener);
		
		this.fieldAirportInformationTWRFrequency.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationTWRFrequency.getName());
		this.fieldAirportInformationTWRFrequency.addMouseListener(listener);
		
		this.fieldAirportInformationAPPFrequency.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationAPPFrequency.getName());
		this.fieldAirportInformationAPPFrequency.addMouseListener(listener);
		
		this.fieldAirportInformationMETAR.setBackground(AtcGUIState.FAIL.getColor());
		this.fieldsWithListeners.add(this.fieldAirportInformationMETAR.getName());
		this.fieldAirportInformationMETAR.addMouseListener(listener);
		
		toggleButtonUpdate.setName("Enable ATC");
		toggleButtonUpdate.addActionListener(listener);
	}
	
	public JTextField getInformationField(String name) {
		if(informationFields.containsKey(name)) {
			return informationFields.get(name);
		}
		return null;
	}
	
	public boolean isFieldWithListener(String name) {
		return fieldsWithListeners.contains(name);
	}
	
	public List<String> getEmptyInformationFields(String... names) {
		List<String> emptyNames = new ArrayList<>();
		for(String name : names) {
			JTextField textField = getInformationField(name);
			if((textField == null) || textField.getText().isEmpty()) {
				emptyNames.add(name);
			}
		}
		return emptyNames;
	}
	
	public void resetDynamicGUIFields() {
		fieldAirportInformationMETAR.setText("");
		fieldAirportInformationMETAR.setBackground(AtcGUIState.FAIL.getColor());
		fieldGlobalInformationDate.setText("");
		fieldGlobalInformationTime.setText("");
		toggleButtonUpdate.setSelected(false);
		toggleButtonUpdate.setText("Enable ATC");
	}
}
